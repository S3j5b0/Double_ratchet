{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1","program":"/home/ask/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","curve25519_dalek_ng","/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","--json=diagnostic-rendered-ansi,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"u32_backend\"","-C","metadata=dfe6cdce3d8ed83c","-C","extra-filename=-dfe6cdce3d8ed83c","--out-dir","/home/ask/Git/Double_ratchet/twoRatchet/target/rls/debug/deps","-L","dependency=/home/ask/Git/Double_ratchet/twoRatchet/target/rls/debug/deps","--extern","byteorder=/home/ask/Git/Double_ratchet/twoRatchet/target/rls/debug/deps/libbyteorder-66cfd649d59eed9e.rmeta","--extern","digest=/home/ask/Git/Double_ratchet/twoRatchet/target/rls/debug/deps/libdigest-337c2796cce31bfe.rmeta","--extern","rand_core=/home/ask/Git/Double_ratchet/twoRatchet/target/rls/debug/deps/librand_core-f4e43195b7fed80d.rmeta","--extern","subtle=/home/ask/Git/Double_ratchet/twoRatchet/target/rls/debug/deps/libsubtle_ng-525150d189a27324.rmeta","--extern","zeroize=/home/ask/Git/Double_ratchet/twoRatchet/target/rls/debug/deps/libzeroize-e46be6fabe0d5756.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/ask/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/ask/Git/Double_ratchet/twoRatchet/target/rls/debug/deps/libcurve25519_dalek_ng-dfe6cdce3d8ed83c.rmeta"},"prelude":{"crate_id":{"name":"curve25519_dalek_ng","disambiguator":[8208982371692575992,0]},"crate_root":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src","external_crates":[{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5443730852259234579,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[4162025702538114948,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17612152343462746361,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":4,"id":{"name":"byteorder","disambiguator":[15087644909559873820,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":5,"id":{"name":"digest","disambiguator":[7466017364505218539,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":6,"id":{"name":"generic_array","disambiguator":[651355052420195279,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":7,"id":{"name":"typenum","disambiguator":[9280503260711882713,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":8,"id":{"name":"rand_core","disambiguator":[14832848752782244939,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":9,"id":{"name":"std","disambiguator":[14026078687029744792,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":10,"id":{"name":"alloc","disambiguator":[5560808256873132085,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":11,"id":{"name":"libc","disambiguator":[135160560163186024,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":12,"id":{"name":"unwind","disambiguator":[5800521777261530329,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":13,"id":{"name":"cfg_if","disambiguator":[7095478770525139037,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":14,"id":{"name":"hashbrown","disambiguator":[17225897750877482818,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":15,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15613653607383163471,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":16,"id":{"name":"rustc_demangle","disambiguator":[12428323400248712701,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":17,"id":{"name":"std_detect","disambiguator":[11893279639181573711,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":18,"id":{"name":"addr2line","disambiguator":[13583305032161054644,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":19,"id":{"name":"gimli","disambiguator":[16609837797022023111,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":20,"id":{"name":"object","disambiguator":[18098459435141129808,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":21,"id":{"name":"memchr","disambiguator":[15244551393771456017,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":22,"id":{"name":"miniz_oxide","disambiguator":[6576340271055396708,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":23,"id":{"name":"adler","disambiguator":[15284510821186066958,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":24,"id":{"name":"panic_unwind","disambiguator":[12982807908830018159,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":25,"id":{"name":"getrandom","disambiguator":[180779033969107660,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":26,"id":{"name":"cfg_if","disambiguator":[1004283514336169005,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":27,"id":{"name":"libc","disambiguator":[1618870790410034143,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":28,"id":{"name":"zeroize","disambiguator":[2674975054179997358,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":29,"id":{"name":"zeroize_derive","disambiguator":[5709257949186075171,0]}},{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","num":30,"id":{"name":"subtle_ng","disambiguator":[10195864607480900191,0]}}],"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":290,"byte_end":2390,"line_start":11,"line_end":86,"column_start":1,"column_end":23}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182007,"byte_end":182008,"line_start":39,"line_end":39,"column_start":42,"column_end":43},"alias_span":null,"name":"*","value":"EDWARDS_D2, L, RR, INVSQRT_A_MINUS_D, SQRT_M1, EDWARDS_D, LFACTOR, AFFINE_ODD_MULTIPLES_OF_BASEPOINT, EDWARDS_D_MINUS_ONE_SQUARED, EIGHT_TORSION, ED25519_BASEPOINT_TABLE, APLUS2_OVER_FOUR, SQRT_AD_MINUS_ONE, ED25519_BASEPOINT_POINT, R, MINUS_ONE, ONE_MINUS_EDWARDS_D_SQUARED","parent":{"krate":0,"index":729}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":290,"byte_end":2390,"line_start":11,"line_end":86,"column_start":1,"column_end":23},"name":"","qualname":"::","value":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":16},{"krate":0,"index":264},{"krate":0,"index":343},{"krate":0,"index":542},{"krate":0,"index":729},{"krate":0,"index":755},{"krate":0,"index":806},{"krate":0,"index":848},{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":"# curve25519-dalek-ng","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":290,"byte_end":300,"line_start":11,"line_end":11,"column_start":1,"column_end":11}},{"value":"deny(missing_docs)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":410,"byte_end":432,"line_start":14,"line_end":14,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scalar","qualname":"::scalar","value":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":97},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":1298},{"krate":0,"index":119},{"krate":0,"index":1300},{"krate":0,"index":1304},{"krate":0,"index":1308},{"krate":0,"index":124},{"krate":0,"index":1311},{"krate":0,"index":127},{"krate":0,"index":1313},{"krate":0,"index":1317},{"krate":0,"index":1321},{"krate":0,"index":132},{"krate":0,"index":1324},{"krate":0,"index":135},{"krate":0,"index":1326},{"krate":0,"index":1330},{"krate":0,"index":1334},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":156},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":176},{"krate":0,"index":186},{"krate":0,"index":196},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":259}],"decl_id":null,"docs":" Arithmetic on scalars (integers mod the group order).","sig":null,"attributes":[{"value":"/ Arithmetic on scalars (integers mod the group order).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":5930,"byte_end":5987,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":5988,"byte_end":5991,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Both the Ristretto group and the Ed25519 basepoint have prime order","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":5992,"byte_end":6063,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ \\\\( \\ell = 2\\^{252} + 27742317777372353535851937790883648493 \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6064,"byte_end":6133,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6134,"byte_end":6137,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This code is intended to be useful with both the Ristretto group","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6138,"byte_end":6206,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ (where everything is done modulo \\\\( \\ell \\\\)), and the X/Ed25519","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6207,"byte_end":6276,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/ setting, which mandates specific bit-twiddles that are not","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6277,"byte_end":6339,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ well-defined modulo \\\\( \\ell \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6340,"byte_end":6377,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6378,"byte_end":6381,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All arithmetic on `Scalars` is done modulo \\\\( \\ell \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6382,"byte_end":6442,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6443,"byte_end":6446,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Constructing a scalar","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6447,"byte_end":6474,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6475,"byte_end":6478,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ To create a [`Scalar`](struct.Scalar.html) from a supposedly canonical encoding, use","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6479,"byte_end":6567,"line_start":27,"line_end":27,"column_start":1,"column_end":89}},{"value":"/ [`Scalar::from_canonical_bytes`](struct.Scalar.html#method.from_canonical_bytes).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6568,"byte_end":6653,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6654,"byte_end":6657,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function does input validation, ensuring that the input bytes","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6658,"byte_end":6728,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ are the canonical encoding of a `Scalar`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6729,"byte_end":6774,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/ If they are, we'll get","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6775,"byte_end":6801,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ `Some(Scalar)` in return:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6802,"byte_end":6831,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6832,"byte_end":6835,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6836,"byte_end":6843,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6844,"byte_end":6888,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6889,"byte_end":6892,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let one_as_bytes: [u8; 32] = Scalar::one().to_bytes();","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6893,"byte_end":6951,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(one_as_bytes);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":6952,"byte_end":7023,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7024,"byte_end":7027,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_some());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7028,"byte_end":7053,"line_start":41,"line_end":41,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7054,"byte_end":7061,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7062,"byte_end":7065,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ However, if we give it bytes representing a scalar larger than \\\\( \\ell \\\\)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7066,"byte_end":7145,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ (in this case, \\\\( \\ell + 2 \\\\)), we'll get `None` back:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7146,"byte_end":7206,"line_start":45,"line_end":45,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7207,"byte_end":7210,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7211,"byte_end":7218,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7219,"byte_end":7263,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7264,"byte_end":7267,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7268,"byte_end":7306,"line_start":50,"line_end":50,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7307,"byte_end":7361,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7362,"byte_end":7416,"line_start":52,"line_end":52,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7417,"byte_end":7471,"line_start":53,"line_end":53,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7472,"byte_end":7526,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7527,"byte_end":7533,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/ let a: Option<Scalar> = Scalar::from_canonical_bytes(l_plus_two_bytes);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7534,"byte_end":7609,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7610,"byte_end":7613,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ assert!(a.is_none());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7614,"byte_end":7639,"line_start":58,"line_end":58,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7640,"byte_end":7647,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7648,"byte_end":7651,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Another way to create a `Scalar` is by reducing a \\\\(256\\\\)-bit integer mod","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7652,"byte_end":7731,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ \\\\( \\ell \\\\), for which one may use the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7732,"byte_end":7775,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Scalar::from_bytes_mod_order`](struct.Scalar.html#method.from_bytes_mod_order)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7776,"byte_end":7860,"line_start":63,"line_end":63,"column_start":1,"column_end":85}},{"value":"/ method.  In the case of the second example above, this would reduce the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7861,"byte_end":7936,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ resultant scalar \\\\( \\mod \\ell \\\\), producing \\\\( 2 \\\\):","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7937,"byte_end":7997,"line_start":65,"line_end":65,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":7998,"byte_end":8001,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8002,"byte_end":8009,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8010,"byte_end":8054,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8055,"byte_end":8058,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8059,"byte_end":8097,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8098,"byte_end":8152,"line_start":71,"line_end":71,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8153,"byte_end":8207,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8208,"byte_end":8262,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8263,"byte_end":8317,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8318,"byte_end":8324,"line_start":75,"line_end":75,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bytes_mod_order(l_plus_two_bytes);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8325,"byte_end":8392,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8393,"byte_end":8396,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8397,"byte_end":8449,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8450,"byte_end":8453,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ assert!(a == two);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8454,"byte_end":8476,"line_start":80,"line_end":80,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8477,"byte_end":8484,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8485,"byte_end":8488,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ There is also a constructor that reduces a \\\\(512\\\\)-bit integer,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8489,"byte_end":8558,"line_start":83,"line_end":83,"column_start":1,"column_end":70}},{"value":"/ [`Scalar::from_bytes_mod_order_wide`](struct.Scalar.html#method.from_bytes_mod_order_wide).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8559,"byte_end":8654,"line_start":84,"line_end":84,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8655,"byte_end":8658,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ To construct a `Scalar` as the hash of some input data, use","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8659,"byte_end":8722,"line_start":86,"line_end":86,"column_start":1,"column_end":64}},{"value":"/ [`Scalar::hash_from_bytes`](struct.Scalar.html#method.hash_from_bytes),","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8723,"byte_end":8798,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/ which takes a buffer, or","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8799,"byte_end":8827,"line_start":88,"line_end":88,"column_start":1,"column_end":29}},{"value":"/ [`Scalar::from_hash`](struct.Scalar.html#method.from_hash),","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8828,"byte_end":8891,"line_start":89,"line_end":89,"column_start":1,"column_end":64}},{"value":"/ which allows an IUF API.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8892,"byte_end":8920,"line_start":90,"line_end":90,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8921,"byte_end":8924,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8925,"byte_end":8932,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # extern crate curve25519_dalek_ng;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8933,"byte_end":8972,"line_start":93,"line_end":93,"column_start":1,"column_end":40}},{"value":"/ # extern crate sha2;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8973,"byte_end":8997,"line_start":94,"line_end":94,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":8998,"byte_end":9003,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9004,"byte_end":9021,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/ use sha2::{Digest, Sha512};","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9022,"byte_end":9053,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9054,"byte_end":9098,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9099,"byte_end":9102,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // Hashing a single byte slice","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9103,"byte_end":9137,"line_start":100,"line_end":100,"column_start":1,"column_end":35}},{"value":"/ let a = Scalar::hash_from_bytes::<Sha512>(b\"Abolish ICE\");","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9138,"byte_end":9200,"line_start":101,"line_end":101,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9201,"byte_end":9204,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ // Streaming data into a hash object","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9205,"byte_end":9245,"line_start":103,"line_end":103,"column_start":1,"column_end":41}},{"value":"/ let mut hasher = Sha512::default();","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9246,"byte_end":9285,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/ hasher.update(b\"Abolish \");","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9286,"byte_end":9317,"line_start":105,"line_end":105,"column_start":1,"column_end":32}},{"value":"/ hasher.update(b\"ICE\");","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9318,"byte_end":9344,"line_start":106,"line_end":106,"column_start":1,"column_end":27}},{"value":"/ let a2 = Scalar::from_hash(hasher);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9345,"byte_end":9384,"line_start":107,"line_end":107,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9385,"byte_end":9388,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(a, a2);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9389,"byte_end":9411,"line_start":109,"line_end":109,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9412,"byte_end":9419,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9420,"byte_end":9427,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9428,"byte_end":9431,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Finally, to create a `Scalar` with a specific bit-pattern","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9432,"byte_end":9493,"line_start":113,"line_end":113,"column_start":1,"column_end":62}},{"value":"/ (e.g., for compatibility with X/Ed25519","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9494,"byte_end":9537,"line_start":114,"line_end":114,"column_start":1,"column_end":44}},{"value":"/ [\"clamping\"](https://github.com/isislovecruft/ed25519-dalek/blob/f790bd2ce/src/ed25519.rs#L349)),","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9538,"byte_end":9639,"line_start":115,"line_end":115,"column_start":1,"column_end":102}},{"value":"/ use [`Scalar::from_bits`](struct.Scalar.html#method.from_bits). This","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9640,"byte_end":9712,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/ constructs a scalar with exactly the bit pattern given, without any","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9713,"byte_end":9784,"line_start":117,"line_end":117,"column_start":1,"column_end":72}},{"value":"/ assurances as to reduction modulo the group order:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9785,"byte_end":9839,"line_start":118,"line_end":118,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9840,"byte_end":9843,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9844,"byte_end":9851,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9852,"byte_end":9896,"line_start":121,"line_end":121,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9897,"byte_end":9900,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ let l_plus_two_bytes: [u8; 32] = [","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9901,"byte_end":9939,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"/    0xef, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9940,"byte_end":9994,"line_start":124,"line_end":124,"column_start":1,"column_end":55}},{"value":"/    0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":9995,"byte_end":10049,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10050,"byte_end":10104,"line_start":126,"line_end":126,"column_start":1,"column_end":55}},{"value":"/    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10105,"byte_end":10159,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/ ];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10160,"byte_end":10166,"line_start":128,"line_end":128,"column_start":1,"column_end":7}},{"value":"/ let a: Scalar = Scalar::from_bits(l_plus_two_bytes);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10167,"byte_end":10223,"line_start":129,"line_end":129,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10224,"byte_end":10227,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let two: Scalar = Scalar::one() + Scalar::one();","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10228,"byte_end":10280,"line_start":131,"line_end":131,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10281,"byte_end":10284,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert!(a != two);              // the scalar is not reduced (mod l)…","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10285,"byte_end":10360,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/ assert!(! a.is_canonical());    // …and therefore is not canonical.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10361,"byte_end":10434,"line_start":134,"line_end":134,"column_start":1,"column_end":72}},{"value":"/ assert!(a.reduce() == two);     // if we were to reduce it manually, it would be.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10435,"byte_end":10520,"line_start":135,"line_end":135,"column_start":1,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10521,"byte_end":10528,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10529,"byte_end":10532,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The resulting `Scalar` has exactly the specified bit pattern,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10533,"byte_end":10598,"line_start":138,"line_end":138,"column_start":1,"column_end":66}},{"value":"/ **except for the highest bit, which will be set to 0**.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":10599,"byte_end":10658,"line_start":139,"line_end":139,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1288},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":11891,"byte_end":11897,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"Scalar {  }","parent":null,"children":[{"krate":0,"index":1289}],"decl_id":null,"docs":" The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which\n represents an element of \\\\(\\mathbb Z / \\ell\\\\).\n","sig":null,"attributes":[{"value":"/ The `Scalar` struct holds an integer \\\\(s < 2\\^{255} \\\\) which","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":11731,"byte_end":11797,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ represents an element of \\\\(\\mathbb Z / \\ell\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":11798,"byte_end":11850,"line_start":184,"line_end":184,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":12665,"byte_end":12685,"line_start":205,"line_end":205,"column_start":12,"column_end":32},"name":"from_bytes_mod_order","qualname":"<Scalar>::from_bytes_mod_order","value":"pub fn from_bytes_mod_order([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 256-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 256-bit little-endian integer","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":12540,"byte_end":12608,"line_start":203,"line_end":203,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":12613,"byte_end":12653,"line_start":204,"line_end":204,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13126,"byte_end":13151,"line_start":218,"line_end":218,"column_start":12,"column_end":37},"name":"from_bytes_mod_order_wide","qualname":"<Scalar>::from_bytes_mod_order_wide","value":"pub fn from_bytes_mod_order_wide(&[u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` by reducing a 512-bit little-endian integer\n modulo the group order \\\\( \\ell \\\\).\n","sig":null,"attributes":[{"value":"/ Construct a `Scalar` by reducing a 512-bit little-endian integer","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13001,"byte_end":13069,"line_start":216,"line_end":216,"column_start":5,"column_end":73}},{"value":"/ modulo the group order \\\\( \\ell \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13074,"byte_end":13114,"line_start":217,"line_end":217,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13563,"byte_end":13583,"line_start":229,"line_end":229,"column_start":12,"column_end":32},"name":"from_canonical_bytes","qualname":"<Scalar>::from_canonical_bytes","value":"pub fn from_canonical_bytes([u8; ]) -> Option<Scalar>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to construct a `Scalar` from a canonical byte representation.","sig":null,"attributes":[{"value":"/ Attempt to construct a `Scalar` from a canonical byte representation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13247,"byte_end":13320,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13325,"byte_end":13328,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13333,"byte_end":13345,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13350,"byte_end":13353,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ - `Some(s)`, where `s` is the `Scalar` corresponding to `bytes`,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13358,"byte_end":13426,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/   if `bytes` is a canonical byte representation;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13431,"byte_end":13483,"line_start":227,"line_end":227,"column_start":5,"column_end":57}},{"value":"/ - `None` if `bytes` is not a canonical byte representation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13488,"byte_end":13551,"line_start":228,"line_end":228,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14139,"byte_end":14148,"line_start":246,"line_end":246,"column_start":18,"column_end":27},"name":"from_bits","qualname":"<Scalar>::from_bits","value":"pub const fn from_bits([u8; ]) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Scalar` from the low 255 bits of a 256-bit integer.","sig":null,"attributes":[{"value":"/ Construct a `Scalar` from the low 255 bits of a 256-bit integer.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13891,"byte_end":13959,"line_start":241,"line_end":241,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13964,"byte_end":13967,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This function is intended for applications like X25519 which","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":13972,"byte_end":14036,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ require specific bit-patterns when performing scalar","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14041,"byte_end":14097,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/ multiplication.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14102,"byte_end":14121,"line_start":245,"line_end":245,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22748,"byte_end":22754,"line_start":558,"line_end":558,"column_start":12,"column_end":18},"name":"random","qualname":"<Scalar>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `Scalar` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `Scalar` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22128,"byte_end":22203,"line_start":534,"line_end":534,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22208,"byte_end":22211,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22216,"byte_end":22228,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22233,"byte_end":22236,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22241,"byte_end":22315,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22320,"byte_end":22323,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22328,"byte_end":22341,"line_start":540,"line_end":540,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22346,"byte_end":22349,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ A random scalar within ℤ/lℤ.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22354,"byte_end":22390,"line_start":542,"line_end":542,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22395,"byte_end":22398,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22403,"byte_end":22416,"line_start":544,"line_end":544,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22421,"byte_end":22424,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22429,"byte_end":22436,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/ extern crate rand_core;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22441,"byte_end":22468,"line_start":547,"line_end":547,"column_start":5,"column_end":32}},{"value":"/ # extern crate curve25519_dalek_ng;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22473,"byte_end":22512,"line_start":548,"line_end":548,"column_start":5,"column_end":44}},{"value":"/ #","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22517,"byte_end":22522,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22527,"byte_end":22544,"line_start":550,"line_end":550,"column_start":5,"column_end":22}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22549,"byte_end":22593,"line_start":551,"line_end":551,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22598,"byte_end":22601,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ use rand_core::OsRng;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22606,"byte_end":22631,"line_start":553,"line_end":553,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22636,"byte_end":22639,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let mut csprng = OsRng;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22644,"byte_end":22671,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/ let a: Scalar = Scalar::random(&mut csprng);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22676,"byte_end":22724,"line_start":556,"line_end":556,"column_start":5,"column_end":53}},{"value":"/ # }","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22729,"byte_end":22736,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23752,"byte_end":23767,"line_start":587,"line_end":587,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<Scalar>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> Scalar where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a scalar.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a scalar.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22955,"byte_end":22995,"line_start":564,"line_end":564,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23000,"byte_end":23003,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23008,"byte_end":23074,"line_start":566,"line_end":566,"column_start":5,"column_end":71}},{"value":"/ bytes (512 bits) of output.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23079,"byte_end":23110,"line_start":567,"line_end":567,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23115,"byte_end":23118,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23123,"byte_end":23166,"line_start":569,"line_end":569,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23171,"byte_end":23174,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23179,"byte_end":23192,"line_start":571,"line_end":571,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23197,"byte_end":23200,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23205,"byte_end":23212,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek_ng;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23217,"byte_end":23256,"line_start":574,"line_end":574,"column_start":5,"column_end":44}},{"value":"/ # use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23261,"byte_end":23307,"line_start":575,"line_end":575,"column_start":5,"column_end":51}},{"value":"/ extern crate sha2;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23312,"byte_end":23334,"line_start":576,"line_end":576,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23339,"byte_end":23342,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23347,"byte_end":23368,"line_start":578,"line_end":578,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23373,"byte_end":23376,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23381,"byte_end":23444,"line_start":580,"line_end":580,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23449,"byte_end":23534,"line_start":581,"line_end":581,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23539,"byte_end":23556,"line_start":582,"line_end":582,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23561,"byte_end":23649,"line_start":583,"line_end":583,"column_start":5,"column_end":93}},{"value":"/ let s = Scalar::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23654,"byte_end":23716,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ # }","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23721,"byte_end":23728,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23733,"byte_end":23740,"line_start":586,"line_end":586,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25457,"byte_end":25466,"line_start":629,"line_end":629,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<Scalar>::from_hash","value":"pub fn from_hash<D>(D) -> Scalar where D: Digest<OutputSize = U64>","parent":null,"children":[],"decl_id":null,"docs":" Construct a scalar from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a scalar from an existing `Digest` instance.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":23961,"byte_end":24019,"line_start":595,"line_end":595,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24024,"byte_end":24027,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24032,"byte_end":24098,"line_start":597,"line_end":597,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24103,"byte_end":24166,"line_start":598,"line_end":598,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24171,"byte_end":24181,"line_start":599,"line_end":599,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24186,"byte_end":24189,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24194,"byte_end":24207,"line_start":601,"line_end":601,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24212,"byte_end":24215,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24220,"byte_end":24227,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek_ng;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24232,"byte_end":24271,"line_start":604,"line_end":604,"column_start":5,"column_end":44}},{"value":"/ # use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24276,"byte_end":24322,"line_start":605,"line_end":605,"column_start":5,"column_end":51}},{"value":"/ extern crate sha2;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24327,"byte_end":24349,"line_start":606,"line_end":606,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24354,"byte_end":24357,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ use sha2::Digest;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24362,"byte_end":24383,"line_start":608,"line_end":608,"column_start":5,"column_end":26}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24388,"byte_end":24409,"line_start":609,"line_end":609,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24414,"byte_end":24417,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24422,"byte_end":24439,"line_start":611,"line_end":611,"column_start":5,"column_end":22}},{"value":"/ let mut h = Sha512::new()","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24444,"byte_end":24473,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/     .chain(\"To really appreciate architecture, you may even need to commit a murder.\")","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24478,"byte_end":24568,"line_start":613,"line_end":613,"column_start":5,"column_end":95}},{"value":"/     .chain(\"While the programs used for The Manhattan Transcripts are of the most extreme\")","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24573,"byte_end":24668,"line_start":614,"line_end":614,"column_start":5,"column_end":100}},{"value":"/     .chain(\"nature, they also parallel the most common formula plot: the archetype of\")","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24673,"byte_end":24764,"line_start":615,"line_end":615,"column_start":5,"column_end":96}},{"value":"/     .chain(\"murder. Other phantasms were occasionally used to underline the fact that\")","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24769,"byte_end":24860,"line_start":616,"line_end":616,"column_start":5,"column_end":96}},{"value":"/     .chain(\"perhaps all architecture, rather than being about functional standards, is\")","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24865,"byte_end":24957,"line_start":617,"line_end":617,"column_start":5,"column_end":97}},{"value":"/     .chain(\"about love and death.\");","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":24962,"byte_end":25002,"line_start":618,"line_end":618,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25007,"byte_end":25010,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let s = Scalar::from_hash(h);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25015,"byte_end":25048,"line_start":620,"line_end":620,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25053,"byte_end":25056,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", s.to_bytes());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25061,"byte_end":25096,"line_start":622,"line_end":622,"column_start":5,"column_end":40}},{"value":"/ assert!(s == Scalar::from_bits([ 21,  88, 208, 252,  63, 122, 210, 152,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25101,"byte_end":25176,"line_start":623,"line_end":623,"column_start":5,"column_end":80}},{"value":"/                                 154,  38,  15,  23,  16, 167,  80, 150,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25181,"byte_end":25256,"line_start":624,"line_end":624,"column_start":5,"column_end":80}},{"value":"/                                 192, 221,  77, 226,  62,  25, 224, 148,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25261,"byte_end":25336,"line_start":625,"line_end":625,"column_start":5,"column_end":80}},{"value":"/                                 239,  48, 176,  10, 185,  69, 168,  11, ]));","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25341,"byte_end":25421,"line_start":626,"line_end":626,"column_start":5,"column_end":85}},{"value":"/ # }","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25426,"byte_end":25433,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25438,"byte_end":25445,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25976,"byte_end":25984,"line_start":648,"line_end":648,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `Scalar` to its underlying sequence of bytes.","sig":null,"attributes":[{"value":"/ Convert this `Scalar` to its underlying sequence of bytes.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25695,"byte_end":25757,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25762,"byte_end":25765,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25770,"byte_end":25783,"line_start":639,"line_end":639,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25788,"byte_end":25791,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25796,"byte_end":25803,"line_start":641,"line_end":641,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25808,"byte_end":25852,"line_start":642,"line_end":642,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25857,"byte_end":25860,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25865,"byte_end":25900,"line_start":644,"line_end":644,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25905,"byte_end":25908,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ assert!(s.to_bytes() == [0u8; 32]);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25913,"byte_end":25952,"line_start":646,"line_end":646,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":25957,"byte_end":25964,"line_start":647,"line_end":647,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26337,"byte_end":26345,"line_start":663,"line_end":663,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Scalar>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View the little-endian byte encoding of the integer representing this Scalar.","sig":null,"attributes":[{"value":"/ View the little-endian byte encoding of the integer representing this Scalar.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26036,"byte_end":26117,"line_start":652,"line_end":652,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26122,"byte_end":26125,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26130,"byte_end":26143,"line_start":654,"line_end":654,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26148,"byte_end":26151,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26156,"byte_end":26163,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26168,"byte_end":26212,"line_start":657,"line_end":657,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26217,"byte_end":26220,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let s: Scalar = Scalar::zero();","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26225,"byte_end":26260,"line_start":659,"line_end":659,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26265,"byte_end":26268,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ assert!(s.as_bytes() == &[0u8; 32]);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26273,"byte_end":26313,"line_start":661,"line_end":661,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26318,"byte_end":26325,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26446,"byte_end":26450,"line_start":668,"line_end":668,"column_start":12,"column_end":16},"name":"zero","qualname":"<Scalar>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 0 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 0 \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26399,"byte_end":26434,"line_start":667,"line_end":667,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26556,"byte_end":26559,"line_start":673,"line_end":673,"column_start":12,"column_end":15},"name":"one","qualname":"<Scalar>::one","value":"pub fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the scalar \\\\( 1 \\\\).\n","sig":null,"attributes":[{"value":"/ Construct the scalar \\\\( 1 \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26509,"byte_end":26544,"line_start":672,"line_end":672,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":28248,"byte_end":28254,"line_start":719,"line_end":719,"column_start":12,"column_end":18},"name":"invert","qualname":"<Scalar>::invert","value":"pub fn invert(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero `Scalar`, compute its multiplicative inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero `Scalar`, compute its multiplicative inverse.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26774,"byte_end":26839,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26844,"byte_end":26847,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26852,"byte_end":26865,"line_start":684,"line_end":684,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26870,"byte_end":26873,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ `self` **MUST** be nonzero.  If you cannot","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26878,"byte_end":26924,"line_start":686,"line_end":686,"column_start":5,"column_end":51}},{"value":"/ *prove* that this is the case, you **SHOULD NOT USE THIS","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26929,"byte_end":26989,"line_start":687,"line_end":687,"column_start":5,"column_end":65}},{"value":"/ FUNCTION**.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":26994,"byte_end":27009,"line_start":688,"line_end":688,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27014,"byte_end":27017,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27022,"byte_end":27035,"line_start":690,"line_end":690,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27040,"byte_end":27043,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The multiplicative inverse of the this `Scalar`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27048,"byte_end":27100,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27105,"byte_end":27108,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27113,"byte_end":27126,"line_start":694,"line_end":694,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27131,"byte_end":27134,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27139,"byte_end":27146,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27151,"byte_end":27195,"line_start":697,"line_end":697,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27200,"byte_end":27203,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ // x = 2238329342913194256032495932344128051776374960164957527413114840482143558222","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27208,"byte_end":27295,"line_start":699,"line_end":699,"column_start":5,"column_end":92}},{"value":"/ let X: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27300,"byte_end":27350,"line_start":700,"line_end":700,"column_start":5,"column_end":55}},{"value":"/         0x4e, 0x5a, 0xb4, 0x34, 0x5d, 0x47, 0x08, 0x84,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27355,"byte_end":27414,"line_start":701,"line_end":701,"column_start":5,"column_end":64}},{"value":"/         0x59, 0x13, 0xb4, 0x64, 0x1b, 0xc2, 0x7d, 0x52,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27419,"byte_end":27478,"line_start":702,"line_end":702,"column_start":5,"column_end":64}},{"value":"/         0x52, 0xa5, 0x85, 0x10, 0x1b, 0xcc, 0x42, 0x44,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27483,"byte_end":27542,"line_start":703,"line_end":703,"column_start":5,"column_end":64}},{"value":"/         0xd4, 0x49, 0xf4, 0xa8, 0x79, 0xd9, 0xf2, 0x04,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27547,"byte_end":27606,"line_start":704,"line_end":704,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27611,"byte_end":27622,"line_start":705,"line_end":705,"column_start":5,"column_end":16}},{"value":"/ // 1/x = 6859937278830797291664592131120606308688036382723378951768035303146619657244","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27627,"byte_end":27716,"line_start":706,"line_end":706,"column_start":5,"column_end":94}},{"value":"/ let XINV: Scalar = Scalar::from_bytes_mod_order([","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27721,"byte_end":27774,"line_start":707,"line_end":707,"column_start":5,"column_end":58}},{"value":"/         0x1c, 0xdc, 0x17, 0xfc, 0xe0, 0xe9, 0xa5, 0xbb,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27779,"byte_end":27838,"line_start":708,"line_end":708,"column_start":5,"column_end":64}},{"value":"/         0xd9, 0x24, 0x7e, 0x56, 0xbb, 0x01, 0x63, 0x47,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27843,"byte_end":27902,"line_start":709,"line_end":709,"column_start":5,"column_end":64}},{"value":"/         0xbb, 0xba, 0x31, 0xed, 0xd5, 0xa9, 0xbb, 0x96,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27907,"byte_end":27966,"line_start":710,"line_end":710,"column_start":5,"column_end":64}},{"value":"/         0xd5, 0x0b, 0xcd, 0x7a, 0x3f, 0x96, 0x2a, 0x0f,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":27971,"byte_end":28030,"line_start":711,"line_end":711,"column_start":5,"column_end":64}},{"value":"/     ]);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":28035,"byte_end":28046,"line_start":712,"line_end":712,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":28051,"byte_end":28054,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ let inv_X: Scalar = X.invert();","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":28059,"byte_end":28094,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/ assert!(XINV == inv_X);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":28099,"byte_end":28126,"line_start":715,"line_end":715,"column_start":5,"column_end":32}},{"value":"/ let should_be_one: Scalar = &inv_X * &X;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":28131,"byte_end":28175,"line_start":716,"line_end":716,"column_start":5,"column_end":49}},{"value":"/ assert!(should_be_one == Scalar::one());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":28180,"byte_end":28224,"line_start":717,"line_end":717,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":28229,"byte_end":28236,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":42571,"byte_end":42577,"line_start":1089,"line_end":1089,"column_start":12,"column_end":18},"name":"reduce","qualname":"<Scalar>::reduce","value":"pub fn reduce(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Reduce this `Scalar` modulo \\\\(\\ell\\\\).\n","sig":null,"attributes":[{"value":"/ Reduce this `Scalar` modulo \\\\(\\ell\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":42487,"byte_end":42530,"line_start":1087,"line_end":1087,"column_start":5,"column_end":48}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":42535,"byte_end":42559,"line_start":1088,"line_end":1088,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43489,"byte_end":43501,"line_start":1114,"line_end":1114,"column_start":12,"column_end":24},"name":"is_canonical","qualname":"<Scalar>::is_canonical","value":"pub fn is_canonical(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","sig":null,"attributes":[{"value":"/ Check whether this `Scalar` is the canonical representative mod \\\\(\\ell\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":42790,"byte_end":42869,"line_start":1096,"line_end":1096,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":42874,"byte_end":42877,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ This is intended for uses like input validation, where variable-time code is acceptable.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":42882,"byte_end":42974,"line_start":1098,"line_end":1098,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":42979,"byte_end":42982,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":42987,"byte_end":42994,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek_ng;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":42999,"byte_end":43038,"line_start":1101,"line_end":1101,"column_start":5,"column_end":44}},{"value":"/ # extern crate subtle;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43043,"byte_end":43069,"line_start":1102,"line_end":1102,"column_start":5,"column_end":31}},{"value":"/ # use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43074,"byte_end":43120,"line_start":1103,"line_end":1103,"column_start":5,"column_end":51}},{"value":"/ # use subtle::ConditionallySelectable;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43125,"byte_end":43167,"line_start":1104,"line_end":1104,"column_start":5,"column_end":47}},{"value":"/ # fn main() {","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43172,"byte_end":43189,"line_start":1105,"line_end":1105,"column_start":5,"column_end":22}},{"value":"/ // 2^255 - 1, since `from_bits` clears the high bit","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43194,"byte_end":43249,"line_start":1106,"line_end":1106,"column_start":5,"column_end":60}},{"value":"/ let _2_255_minus_1 = Scalar::from_bits([0xff;32]);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43254,"byte_end":43308,"line_start":1107,"line_end":1107,"column_start":5,"column_end":59}},{"value":"/ assert!(!_2_255_minus_1.is_canonical());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43313,"byte_end":43357,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43362,"byte_end":43365,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let reduced = _2_255_minus_1.reduce();","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43370,"byte_end":43412,"line_start":1110,"line_end":1110,"column_start":5,"column_end":47}},{"value":"/ assert!(reduced.is_canonical());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43417,"byte_end":43453,"line_start":1111,"line_end":1111,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43458,"byte_end":43465,"line_start":1112,"line_end":1112,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43470,"byte_end":43477,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":264},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"montgomery","qualname":"::montgomery","value":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":1337},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1356},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1364},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1375},{"krate":0,"index":1379},{"krate":0,"index":329},{"krate":0,"index":335},{"krate":0,"index":338}],"decl_id":null,"docs":" Scalar multiplication on the Montgomery form of Curve25519.","sig":null,"attributes":[{"value":"/ Scalar multiplication on the Montgomery form of Curve25519.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66027,"byte_end":66090,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66091,"byte_end":66094,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ To avoid notational confusion with the Edwards code, we use","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66095,"byte_end":66158,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/ variables \\\\( u, v \\\\) for the Montgomery curve, so that “Montgomery","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66159,"byte_end":66233,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/ \\\\(u\\\\)” here corresponds to “Montgomery \\\\(x\\\\)” elsewhere.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66234,"byte_end":66304,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66305,"byte_end":66308,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Montgomery arithmetic works not on the curve itself, but on the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66309,"byte_end":66376,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ \\\\(u\\\\)-line, which discards sign information and unifies the curve","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66377,"byte_end":66448,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ and its quadratic twist.  See [_Montgomery curves and their","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66449,"byte_end":66512,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ arithmetic_][costello-smith] by Costello and Smith for more details.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66513,"byte_end":66585,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66586,"byte_end":66589,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `MontgomeryPoint` struct contains the affine \\\\(u\\\\)-coordinate","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66590,"byte_end":66661,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\_0(P)\\\\) of a point \\\\(P\\\\) on either the curve or the twist.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66662,"byte_end":66732,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ Here the map \\\\(u\\_0 : \\mathcal M \\rightarrow \\mathbb F\\_p \\\\) is","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66733,"byte_end":66802,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ defined by \\\\(u\\_0((u,v)) = u\\\\); \\\\(u\\_0(\\mathcal O) = 0\\\\).  See","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66803,"byte_end":66873,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ section 5.4 of Costello-Smith for more details.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66874,"byte_end":66925,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66926,"byte_end":66929,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Scalar Multiplication","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66930,"byte_end":66957,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66958,"byte_end":66961,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on `MontgomeryPoint`s is provided by the `*`","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":66962,"byte_end":67032,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ operator, which implements the Montgomery ladder.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67033,"byte_end":67086,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67087,"byte_end":67090,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Edwards Conversion","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67091,"byte_end":67115,"line_start":33,"line_end":33,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67116,"byte_end":67119,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ The \\\\(2\\\\)-to-\\\\(1\\\\) map from the Edwards model to the Montgomery","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67120,"byte_end":67191,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ \\\\(u\\\\)-line is provided by `EdwardsPoint::to_montgomery()`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67192,"byte_end":67256,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67257,"byte_end":67260,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ To lift a `MontgomeryPoint` to an `EdwardsPoint`, use","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67261,"byte_end":67318,"line_start":38,"line_end":38,"column_start":1,"column_end":58}},{"value":"/ `MontgomeryPoint::to_edwards()`, which takes a sign parameter.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67319,"byte_end":67385,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/ This function rejects `MontgomeryPoints` which correspond to points","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67386,"byte_end":67457,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ on the twist.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67458,"byte_end":67475,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67476,"byte_end":67479,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [costello-smith]: https://eprint.iacr.org/2017/212.pdf","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67480,"byte_end":67538,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":67820,"byte_end":67845,"line_start":49,"line_end":49,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1337},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68364,"byte_end":68379,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"MontgomeryPoint","qualname":"::montgomery::MontgomeryPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of\n Curve25519 or its twist.\n","sig":null,"attributes":[{"value":"/ Holds the \\\\(u\\\\)-coordinate of a point on the Montgomery form of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68141,"byte_end":68210,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/ Curve25519 or its twist.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68211,"byte_end":68239,"line_start":67,"line_end":67,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1339},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68380,"byte_end":68392,"line_start":70,"line_end":70,"column_start":28,"column_end":40},"name":"0","qualname":"::montgomery::MontgomeryPoint::0","value":"[u8; 32]","parent":{"krate":0,"index":1337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69189,"byte_end":69197,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<MontgomeryPoint>::as_bytes","value":"pub fn as_bytes<'a>(&'a Self) -> &'a [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `MontgomeryPoint` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `MontgomeryPoint` as an array of bytes.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69124,"byte_end":69177,"line_start":103,"line_end":103,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69325,"byte_end":69333,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<MontgomeryPoint>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert this `MontgomeryPoint` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Convert this `MontgomeryPoint` to an array of bytes.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69257,"byte_end":69313,"line_start":108,"line_end":108,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69970,"byte_end":69980,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"to_edwards","qualname":"<MontgomeryPoint>::to_edwards","value":"pub fn to_edwards(&Self, u8) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert to an `EdwardsPoint`, using the supplied\n choice of sign for the `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to convert to an `EdwardsPoint`, using the supplied","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69381,"byte_end":69444,"line_start":113,"line_end":113,"column_start":5,"column_end":68}},{"value":"/ choice of sign for the `EdwardsPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69449,"byte_end":69491,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69496,"byte_end":69499,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69504,"byte_end":69516,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69521,"byte_end":69524,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ * `sign`: a `u8` donating the desired sign of the resulting","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69529,"byte_end":69592,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/   `EdwardsPoint`.  `0` denotes positive and `1` negative.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69597,"byte_end":69658,"line_start":119,"line_end":119,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69663,"byte_end":69666,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69671,"byte_end":69683,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69688,"byte_end":69691,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ * `Some(EdwardsPoint)` if `self` is the \\\\(u\\\\)-coordinate of a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69696,"byte_end":69763,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ point on (the Montgomery form of) Curve25519;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69768,"byte_end":69817,"line_start":124,"line_end":124,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69822,"byte_end":69825,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ * `None` if `self` is the \\\\(u\\\\)-coordinate of a point on the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69830,"byte_end":69896,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ twist of (the Montgomery form of) Curve25519;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69901,"byte_end":69950,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69955,"byte_end":69958,"line_start":128,"line_end":128,"column_start":5,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":343},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"edwards","qualname":"::edwards","value":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":1382},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":1401},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":1409},{"krate":0,"index":1413},{"krate":0,"index":1417},{"krate":0,"index":477},{"krate":0,"index":1420},{"krate":0,"index":480},{"krate":0,"index":1422},{"krate":0,"index":1426},{"krate":0,"index":1430},{"krate":0,"index":485},{"krate":0,"index":1433},{"krate":0,"index":488},{"krate":0,"index":493},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1441},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1452},{"krate":0,"index":1456},{"krate":0,"index":503},{"krate":0,"index":508},{"krate":0,"index":513},{"krate":0,"index":1459},{"krate":0,"index":1463},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":524},{"krate":0,"index":529},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":540}],"decl_id":null,"docs":" Group operations for Curve25519, in Edwards form.","sig":null,"attributes":[{"value":"/ Group operations for Curve25519, in Edwards form.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":78922,"byte_end":78975,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":78976,"byte_end":78979,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":78980,"byte_end":79008,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79009,"byte_end":79012,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedEdwardsY`","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79013,"byte_end":79082,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79083,"byte_end":79138,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79139,"byte_end":79142,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79143,"byte_end":79166,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79167,"byte_end":79170,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The `EdwardsPoint` struct implements the `subtle::ConstantTimeEq`","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79171,"byte_end":79240,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ trait for constant-time equality checking, and the Rust `Eq` trait","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79241,"byte_end":79311,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ for variable-time equality checking.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79312,"byte_end":79352,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79353,"byte_end":79356,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Cofactor-related functions","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79357,"byte_end":79390,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79391,"byte_end":79394,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The order of the group of points on the curve \\\\(\\mathcal E\\\\)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79395,"byte_end":79461,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/ is \\\\(|\\mathcal E| = 8\\ell \\\\), so its structure is \\\\( \\mathcal","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79462,"byte_end":79530,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ E = \\mathcal E[8] \\times \\mathcal E[\\ell]\\\\).  The torsion","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79531,"byte_end":79593,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ subgroup \\\\( \\mathcal E[8] \\\\) consists of eight points of small","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79594,"byte_end":79662,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/ order.  Technically, all of \\\\(\\mathcal E\\\\) is torsion, but we","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79663,"byte_end":79730,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/ use the word only to refer to the small \\\\(\\mathcal E[8]\\\\) part, not","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79731,"byte_end":79804,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ the large prime-order \\\\(\\mathcal E[\\ell]\\\\) part.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79805,"byte_end":79859,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79860,"byte_end":79863,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[8] \\\\), use","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79864,"byte_end":79919,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/ `EdwardsPoint::is_small_order()`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79920,"byte_end":79957,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79958,"byte_end":79961,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ To test if a point is in \\\\( \\mathcal E[\\ell] \\\\), use","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":79962,"byte_end":80020,"line_start":37,"line_end":37,"column_start":1,"column_end":59}},{"value":"/ `EdwardsPoint::is_torsion_free()`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80021,"byte_end":80059,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80060,"byte_end":80063,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ To multiply by the cofactor, use `EdwardsPoint::mul_by_cofactor()`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80064,"byte_end":80135,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80136,"byte_end":80139,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ To avoid dealing with cofactors entirely, consider using Ristretto.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80140,"byte_end":80211,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80212,"byte_end":80215,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80216,"byte_end":80230,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80231,"byte_end":80234,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  To construct a scalar with a specific bit","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80235,"byte_end":80329,"line_start":46,"line_end":46,"column_start":1,"column_end":95}},{"value":"/ pattern, see `Scalar::from_bits()`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80330,"byte_end":80369,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80370,"byte_end":80373,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80374,"byte_end":80402,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80403,"byte_end":80406,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Edwards points is provided by:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80407,"byte_end":80466,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80467,"byte_end":80470,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `EdwardsPoint`, which","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80471,"byte_end":80540,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80541,"byte_end":80604,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80605,"byte_end":80608,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80609,"byte_end":80656,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"/ `EdwardsBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80657,"byte_end":80725,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ scalar multiplication;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80726,"byte_end":80752,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80753,"byte_end":80756,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80757,"byte_end":80787,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80788,"byte_end":80857,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80858,"byte_end":80917,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80918,"byte_end":80921,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80922,"byte_end":80952,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":80953,"byte_end":81026,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81027,"byte_end":81096,"line_start":66,"line_end":66,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81097,"byte_end":81100,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81101,"byte_end":81122,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81123,"byte_end":81126,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The Edwards arithmetic is implemented using the “extended twisted","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81127,"byte_end":81198,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/ coordinates” of Hisil, Wong, Carter, and Dawson, and the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81199,"byte_end":81261,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/ corresponding complete formulas.  For more details,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81262,"byte_end":81317,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/ see the [`curve_models` submodule][curve_models]","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81318,"byte_end":81370,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ of the internal documentation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81371,"byte_end":81405,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81406,"byte_end":81409,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Validity Checking","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81410,"byte_end":81434,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81435,"byte_end":81438,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ There is no function for checking whether a point is valid.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81439,"byte_end":81502,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/ Instead, the `EdwardsPoint` struct is guaranteed to hold a valid","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81503,"byte_end":81571,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"/ point on the curve.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81572,"byte_end":81595,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81596,"byte_end":81599,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ We use the Rust type system to make invalid points","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81600,"byte_end":81654,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/ unrepresentable: `EdwardsPoint` objects can only be created via","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81655,"byte_end":81722,"line_start":83,"line_end":83,"column_start":1,"column_end":68}},{"value":"/ successful decompression of a compressed point, or else by","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81723,"byte_end":81785,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/ operations on other (valid) `EdwardsPoint`s.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81786,"byte_end":81834,"line_start":85,"line_end":85,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81835,"byte_end":81838,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [curve_models]: https://doc-internal.dalek.rs/curve25519_dalek/backend/serial/curve_models/index.html","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":81839,"byte_end":81944,"line_start":87,"line_end":87,"column_start":1,"column_end":106}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":82226,"byte_end":82251,"line_start":93,"line_end":93,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1382},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84017,"byte_end":84035,"line_start":154,"line_end":154,"column_start":12,"column_end":30},"name":"CompressedEdwardsY","qualname":"::edwards::CompressedEdwardsY","value":"","parent":null,"children":[],"decl_id":null,"docs":" In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is\n determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","sig":null,"attributes":[{"value":"/ In \"Edwards y\" / \"Ed25519\" format, the curve point \\\\((x,y)\\\\) is","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":83677,"byte_end":83746,"line_start":148,"line_end":148,"column_start":1,"column_end":70}},{"value":"/ determined by the \\\\(y\\\\)-coordinate and the sign of \\\\(x\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":83747,"byte_end":83812,"line_start":149,"line_end":149,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":83813,"byte_end":83816,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The first 255 bits of a `CompressedEdwardsY` represent the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":83817,"byte_end":83879,"line_start":151,"line_end":151,"column_start":1,"column_end":63}},{"value":"/ \\\\(y\\\\)-coordinate.  The high bit of the 32nd byte gives the sign of \\\\(x\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":83880,"byte_end":83961,"line_start":152,"line_end":152,"column_start":1,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1384},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84036,"byte_end":84048,"line_start":154,"line_end":154,"column_start":31,"column_end":43},"name":"0","qualname":"::edwards::CompressedEdwardsY::0","value":"[u8; 32]","parent":{"krate":0,"index":1382},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84495,"byte_end":84503,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedEdwardsY>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedEdwardsY` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedEdwardsY` as an array of bytes.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84427,"byte_end":84483,"line_start":169,"line_end":169,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84621,"byte_end":84629,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedEdwardsY>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy this `CompressedEdwardsY` to an array of bytes.\n","sig":null,"attributes":[{"value":"/ Copy this `CompressedEdwardsY` to an array of bytes.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84553,"byte_end":84609,"line_start":174,"line_end":174,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84836,"byte_end":84846,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedEdwardsY>::decompress","value":"pub fn decompress(&Self) -> Option<EdwardsPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `EdwardsPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84677,"byte_end":84724,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84729,"byte_end":84732,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input is not the \\\\(y\\\\)-coordinate of a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84737,"byte_end":84803,"line_start":181,"line_end":181,"column_start":5,"column_end":71}},{"value":"/ curve point.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84808,"byte_end":84824,"line_start":182,"line_end":182,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":89450,"byte_end":89462,"line_start":312,"line_end":312,"column_start":12,"column_end":24},"name":"EdwardsPoint","qualname":"::edwards::EdwardsPoint","value":"EdwardsPoint {  }","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"decl_id":null,"docs":" An `EdwardsPoint` represents a point on the Edwards form of Curve25519.\n","sig":null,"attributes":[{"value":"/ An `EdwardsPoint` represents a point on the Edwards form of Curve25519.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":89317,"byte_end":89392,"line_start":309,"line_end":309,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":89416,"byte_end":89438,"line_start":311,"line_end":311,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90390,"byte_end":90400,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedEdwardsY>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedEdwardsY` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedEdwardsY` from a slice of bytes.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90221,"byte_end":90280,"line_start":339,"line_end":339,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90285,"byte_end":90288,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90293,"byte_end":90305,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90310,"byte_end":90313,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90318,"byte_end":90378,"line_start":343,"line_end":343,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94619,"byte_end":94632,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"to_montgomery","qualname":"<EdwardsPoint>::to_montgomery","value":"pub fn to_montgomery(&Self) -> MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this `EdwardsPoint` on the Edwards model to the\n corresponding `MontgomeryPoint` on the Montgomery model.","sig":null,"attributes":[{"value":"/ Convert this `EdwardsPoint` on the Edwards model to the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94178,"byte_end":94237,"line_start":464,"line_end":464,"column_start":5,"column_end":64}},{"value":"/ corresponding `MontgomeryPoint` on the Montgomery model.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94242,"byte_end":94302,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94307,"byte_end":94310,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ This function has one exceptional case; the identity point of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94315,"byte_end":94380,"line_start":467,"line_end":467,"column_start":5,"column_end":70}},{"value":"/ the Edwards curve is sent to the 2-torsion point \\\\((0,0)\\\\)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94385,"byte_end":94449,"line_start":468,"line_end":468,"column_start":5,"column_end":69}},{"value":"/ on the Montgomery curve.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94454,"byte_end":94482,"line_start":469,"line_end":469,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94487,"byte_end":94490,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Note that this is a one-way conversion, since the Montgomery","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94495,"byte_end":94559,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/ model does not retain sign information.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":94564,"byte_end":94607,"line_start":472,"line_end":472,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":95129,"byte_end":95137,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"compress","qualname":"<EdwardsPoint>::compress","value":"pub fn compress(&Self) -> CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" Compress this point to `CompressedEdwardsY` format.\n","sig":null,"attributes":[{"value":"/ Compress this point to `CompressedEdwardsY` format.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":95062,"byte_end":95117,"line_start":485,"line_end":485,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":102825,"byte_end":102860,"line_start":737,"line_end":737,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<EdwardsPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &EdwardsPoint, &Scalar)\n-> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the Ed25519 basepoint.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":102730,"byte_end":102813,"line_start":736,"line_end":736,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1459},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":103329,"byte_end":103350,"line_start":753,"line_end":753,"column_start":12,"column_end":33},"name":"EdwardsBasepointTable","qualname":"::edwards::EdwardsBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, for accelerating\n fixed-base scalar multiplication.  One table, for the Ed25519\n basepoint, is provided in the `constants` module.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, for accelerating","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":103015,"byte_end":103084,"line_start":746,"line_end":746,"column_start":1,"column_end":70}},{"value":"/ fixed-base scalar multiplication.  One table, for the Ed25519","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":103085,"byte_end":103150,"line_start":747,"line_end":747,"column_start":1,"column_end":66}},{"value":"/ basepoint, is provided in the `constants` module.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":103151,"byte_end":103204,"line_start":748,"line_end":748,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":103205,"byte_end":103208,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ The basepoint tables are reasonably large (30KB), so they should","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":103209,"byte_end":103277,"line_start":750,"line_end":750,"column_start":1,"column_end":69}},{"value":"/ probably be boxed.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":103278,"byte_end":103300,"line_start":751,"line_end":751,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":106060,"byte_end":106066,"line_start":826,"line_end":826,"column_start":12,"column_end":18},"name":"create","qualname":"<EdwardsBasepointTable>::create","value":"pub fn create(&EdwardsPoint) -> EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a table of precomputed multiples of `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a table of precomputed multiples of `basepoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":105989,"byte_end":106048,"line_start":825,"line_end":825,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":106503,"byte_end":106512,"line_start":839,"line_end":839,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<EdwardsBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as an `EdwardsPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as an `EdwardsPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":106433,"byte_end":106491,"line_start":838,"line_end":838,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":106831,"byte_end":106846,"line_start":848,"line_end":848,"column_start":12,"column_end":27},"name":"mul_by_cofactor","qualname":"<EdwardsPoint>::mul_by_cofactor","value":"pub fn mul_by_cofactor(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Multiply by the cofactor: return \\\\([8]P\\\\).\n","sig":null,"attributes":[{"value":"/ Multiply by the cofactor: return \\\\([8]P\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":106771,"byte_end":106819,"line_start":847,"line_end":847,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108082,"byte_end":108096,"line_start":887,"line_end":887,"column_start":12,"column_end":26},"name":"is_small_order","qualname":"<EdwardsPoint>::is_small_order","value":"pub fn is_small_order(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is of small order.","sig":null,"attributes":[{"value":"/ Determine if this point is of small order.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107364,"byte_end":107410,"line_start":864,"line_end":864,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107415,"byte_end":107418,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107423,"byte_end":107435,"line_start":866,"line_end":866,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107440,"byte_end":107443,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` is in the torsion subgroup \\\\( \\mathcal E[8] \\\\);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107448,"byte_end":107520,"line_start":868,"line_end":868,"column_start":5,"column_end":77}},{"value":"/ * `false` if `self` is not in the torsion subgroup \\\\( \\mathcal E[8] \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107525,"byte_end":107602,"line_start":869,"line_end":869,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107607,"byte_end":107610,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107615,"byte_end":107628,"line_start":871,"line_end":871,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107633,"byte_end":107636,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107641,"byte_end":107648,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek_ng::constants;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107653,"byte_end":107692,"line_start":874,"line_end":874,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107697,"byte_end":107700,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107705,"byte_end":107749,"line_start":876,"line_end":876,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107754,"byte_end":107801,"line_start":877,"line_end":877,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107806,"byte_end":107846,"line_start":878,"line_end":878,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107851,"byte_end":107891,"line_start":879,"line_end":879,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107896,"byte_end":107899,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ // P has large order","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107904,"byte_end":107928,"line_start":881,"line_end":881,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_small_order(), false);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107933,"byte_end":107975,"line_start":882,"line_end":882,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107980,"byte_end":107983,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ // Q has small order","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":107988,"byte_end":108012,"line_start":884,"line_end":884,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Q.is_small_order(), true);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108017,"byte_end":108058,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108063,"byte_end":108070,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":109009,"byte_end":109024,"line_start":917,"line_end":917,"column_start":12,"column_end":27},"name":"is_torsion_free","qualname":"<EdwardsPoint>::is_torsion_free","value":"pub fn is_torsion_free(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if this point is “torsion-free”, i.e., is contained in\n the prime-order subgroup.","sig":null,"attributes":[{"value":"/ Determine if this point is “torsion-free”, i.e., is contained in","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108170,"byte_end":108242,"line_start":891,"line_end":891,"column_start":5,"column_end":73}},{"value":"/ the prime-order subgroup.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108247,"byte_end":108276,"line_start":892,"line_end":892,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108281,"byte_end":108284,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108289,"byte_end":108301,"line_start":894,"line_end":894,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108306,"byte_end":108309,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ * `true` if `self` has zero torsion component and is in the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108314,"byte_end":108377,"line_start":896,"line_end":896,"column_start":5,"column_end":68}},{"value":"/ prime-order subgroup;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108382,"byte_end":108407,"line_start":897,"line_end":897,"column_start":5,"column_end":30}},{"value":"/ * `false` if `self` has a nonzero torsion component and is not","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108412,"byte_end":108478,"line_start":898,"line_end":898,"column_start":5,"column_end":71}},{"value":"/ in the prime-order subgroup.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108483,"byte_end":108515,"line_start":899,"line_end":899,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108520,"byte_end":108523,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108528,"byte_end":108541,"line_start":901,"line_end":901,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108546,"byte_end":108549,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108554,"byte_end":108561,"line_start":903,"line_end":903,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek_ng::constants;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108566,"byte_end":108605,"line_start":904,"line_end":904,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108610,"byte_end":108613,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ // Generator of the prime-order subgroup","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108618,"byte_end":108662,"line_start":906,"line_end":906,"column_start":5,"column_end":49}},{"value":"/ let P = constants::ED25519_BASEPOINT_POINT;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108667,"byte_end":108714,"line_start":907,"line_end":907,"column_start":5,"column_end":52}},{"value":"/ // Generator of the torsion subgroup","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108719,"byte_end":108759,"line_start":908,"line_end":908,"column_start":5,"column_end":45}},{"value":"/ let Q = constants::EIGHT_TORSION[1];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108764,"byte_end":108804,"line_start":909,"line_end":909,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108809,"byte_end":108812,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ // P is torsion-free","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108817,"byte_end":108841,"line_start":911,"line_end":911,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(P.is_torsion_free(), true);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108846,"byte_end":108888,"line_start":912,"line_end":912,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108893,"byte_end":108896,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ // P + Q is not torsion-free","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108901,"byte_end":108933,"line_start":914,"line_end":914,"column_start":5,"column_end":37}},{"value":"/ assert_eq!((P+Q).is_torsion_free(), false);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108938,"byte_end":108985,"line_start":915,"line_end":915,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":108990,"byte_end":108997,"line_start":916,"line_end":916,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":542},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ristretto","qualname":"::ristretto","value":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":586},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":1465},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":638},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":1490},{"krate":0,"index":1494},{"krate":0,"index":1498},{"krate":0,"index":672},{"krate":0,"index":1501},{"krate":0,"index":675},{"krate":0,"index":1503},{"krate":0,"index":1507},{"krate":0,"index":1511},{"krate":0,"index":680},{"krate":0,"index":1514},{"krate":0,"index":683},{"krate":0,"index":688},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":703},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1522},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1533},{"krate":0,"index":1537},{"krate":0,"index":708},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":710},{"krate":0,"index":715},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":727}],"decl_id":null,"docs":" An implementation of [Ristretto][ristretto_main], which provides a\n prime-order group.","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":128854,"byte_end":128879,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"/ An implementation of [Ristretto][ristretto_main], which provides a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":128881,"byte_end":128951,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ prime-order group.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":128952,"byte_end":128974,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":128975,"byte_end":128978,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # The Ristretto Group","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":128979,"byte_end":129004,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129005,"byte_end":129008,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Ristretto is a modification of Mike Hamburg's Decaf scheme to work","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129009,"byte_end":129079,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ with cofactor-\\\\(8\\\\) curves, such as Curve25519.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129080,"byte_end":129133,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129134,"byte_end":129137,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The introduction of the Decaf paper, [_Decaf:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129138,"byte_end":129187,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/ Eliminating cofactors through point","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129188,"byte_end":129227,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ compression_](https://eprint.iacr.org/2015/673.pdf), notes that while","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129228,"byte_end":129301,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ most cryptographic systems require a group of prime order, most","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129302,"byte_end":129369,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ concrete implementations using elliptic curve groups fall short –","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129370,"byte_end":129441,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ they either provide a group of prime order, but with incomplete or","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129442,"byte_end":129512,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ variable-time addition formulae (for instance, most Weierstrass","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129513,"byte_end":129580,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ models), or else they provide a fast and safe implementation of a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129581,"byte_end":129650,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ group whose order is not quite a prime \\\\(q\\\\), but \\\\(hq\\\\) for a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129651,"byte_end":129721,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ small cofactor \\\\(h\\\\) (for instance, Edwards curves, which have","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129722,"byte_end":129790,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ cofactor at least \\\\(4\\\\)).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129791,"byte_end":129822,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129823,"byte_end":129826,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This abstraction mismatch is commonly “handled” by pushing the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129827,"byte_end":129897,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ complexity upwards, adding ad-hoc protocol modifications.  But","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129898,"byte_end":129964,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ these modifications require careful analysis and are a recurring","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":129965,"byte_end":130033,"line_start":39,"line_end":39,"column_start":1,"column_end":69}},{"value":"/ source of [vulnerabilities][cryptonote] and [design","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130034,"byte_end":130089,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ complications][ed25519_hkd].","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130090,"byte_end":130122,"line_start":41,"line_end":41,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130123,"byte_end":130126,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Instead, Decaf (and Ristretto) use a quotient group to implement a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130127,"byte_end":130197,"line_start":43,"line_end":43,"column_start":1,"column_end":71}},{"value":"/ prime-order group using a non-prime-order curve.  This provides","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130198,"byte_end":130265,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"/ the correct abstraction for cryptographic systems, while retaining","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130266,"byte_end":130336,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ the speed and safety benefits of an Edwards curve.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130337,"byte_end":130391,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130392,"byte_end":130395,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Decaf is named “after the procedure which divides the effect of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130396,"byte_end":130465,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"/ coffee by \\\\(4\\\\)”.  However, Curve25519 has a cofactor of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130466,"byte_end":130530,"line_start":49,"line_end":49,"column_start":1,"column_end":63}},{"value":"/ \\\\(8\\\\).  To eliminate its cofactor, Ristretto restricts further;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130531,"byte_end":130600,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/ this [additional restriction][ristretto_coffee] gives the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130601,"byte_end":130662,"line_start":51,"line_end":51,"column_start":1,"column_end":62}},{"value":"/ _Ristretto_ encoding.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130663,"byte_end":130688,"line_start":52,"line_end":52,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130689,"byte_end":130692,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ More details on why Ristretto is necessary can be found in the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130693,"byte_end":130759,"line_start":54,"line_end":54,"column_start":1,"column_end":67}},{"value":"/ [Why Ristretto?][why_ristretto] section of the Ristretto website.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130760,"byte_end":130829,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130830,"byte_end":130833,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Ristretto","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130834,"byte_end":130847,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/ points are provided in `curve25519-dalek` by the `RistrettoPoint`","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130848,"byte_end":130917,"line_start":58,"line_end":58,"column_start":1,"column_end":70}},{"value":"/ struct.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130918,"byte_end":130929,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130930,"byte_end":130933,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Encoding and Decoding","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130934,"byte_end":130962,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130963,"byte_end":130966,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Encoding is done by converting to and from a `CompressedRistretto`","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":130967,"byte_end":131037,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ struct, which is a typed wrapper around `[u8; 32]`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131038,"byte_end":131093,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131094,"byte_end":131097,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The encoding is not batchable, but it is possible to","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131098,"byte_end":131154,"line_start":66,"line_end":66,"column_start":1,"column_end":57}},{"value":"/ double-and-encode in a batch using","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131155,"byte_end":131193,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ `RistrettoPoint::double_and_compress_batch`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131194,"byte_end":131242,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131243,"byte_end":131246,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Equality Testing","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131247,"byte_end":131270,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131271,"byte_end":131274,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Testing equality of points on an Edwards curve in projective","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131275,"byte_end":131339,"line_start":72,"line_end":72,"column_start":1,"column_end":65}},{"value":"/ coordinates requires an expensive inversion.  By contrast, equality","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131340,"byte_end":131411,"line_start":73,"line_end":73,"column_start":1,"column_end":72}},{"value":"/ checking in the Ristretto group can be done in projective","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131412,"byte_end":131473,"line_start":74,"line_end":74,"column_start":1,"column_end":62}},{"value":"/ coordinates without requiring an inversion, so it is much faster.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131474,"byte_end":131543,"line_start":75,"line_end":75,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131544,"byte_end":131547,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The `RistrettoPoint` struct implements the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131548,"byte_end":131594,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/ `subtle::ConstantTimeEq` trait for constant-time equality","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131595,"byte_end":131656,"line_start":78,"line_end":78,"column_start":1,"column_end":62}},{"value":"/ checking, and the Rust `Eq` trait for variable-time equality","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131657,"byte_end":131721,"line_start":79,"line_end":79,"column_start":1,"column_end":65}},{"value":"/ checking.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131722,"byte_end":131735,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131736,"byte_end":131739,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ## Scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131740,"byte_end":131754,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131755,"byte_end":131758,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Scalars are represented by the `Scalar` struct.  Each scalar has a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131759,"byte_end":131829,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"/ canonical representative mod the group order.  To attempt to load","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131830,"byte_end":131899,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/ a supposedly-canonical scalar, use","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131900,"byte_end":131938,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/ `Scalar::from_canonical_bytes()`. To check whether a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131939,"byte_end":131995,"line_start":87,"line_end":87,"column_start":1,"column_end":57}},{"value":"/ representative is canonical, use `Scalar::is_canonical()`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":131996,"byte_end":132058,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132059,"byte_end":132062,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Scalar Multiplication","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132063,"byte_end":132091,"line_start":90,"line_end":90,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132092,"byte_end":132095,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Scalar multiplication on Ristretto points is provided by:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132096,"byte_end":132157,"line_start":92,"line_end":92,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132158,"byte_end":132161,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a `RistrettoPoint`, which","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132162,"byte_end":132233,"line_start":94,"line_end":94,"column_start":1,"column_end":72}},{"value":"/ performs constant-time variable-base scalar multiplication;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132234,"byte_end":132297,"line_start":95,"line_end":95,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132298,"byte_end":132301,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ * the `*` operator between a `Scalar` and a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132302,"byte_end":132349,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/ `RistrettoBasepointTable`, which performs constant-time fixed-base","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132350,"byte_end":132420,"line_start":98,"line_end":98,"column_start":1,"column_end":71}},{"value":"/ scalar multiplication;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132421,"byte_end":132447,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132448,"byte_end":132451,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132452,"byte_end":132482,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/ [`MultiscalarMul`](../traits/trait.MultiscalarMul.html) trait for","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132483,"byte_end":132552,"line_start":102,"line_end":102,"column_start":1,"column_end":70}},{"value":"/ constant-time variable-base multiscalar multiplication;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132553,"byte_end":132612,"line_start":103,"line_end":103,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132613,"byte_end":132616,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * an implementation of the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132617,"byte_end":132647,"line_start":105,"line_end":105,"column_start":1,"column_end":31}},{"value":"/ [`VartimeMultiscalarMul`](../traits/trait.VartimeMultiscalarMul.html)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132648,"byte_end":132721,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ trait for variable-time variable-base multiscalar multiplication;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132722,"byte_end":132791,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132792,"byte_end":132795,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ## Random Points and Hashing to Ristretto","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132796,"byte_end":132841,"line_start":109,"line_end":109,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132842,"byte_end":132845,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The Ristretto group comes equipped with an Elligator map.  This is","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132846,"byte_end":132916,"line_start":111,"line_end":111,"column_start":1,"column_end":71}},{"value":"/ used to implement","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132917,"byte_end":132938,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132939,"byte_end":132942,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::random()`, which generates random points from an","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":132943,"byte_end":133014,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ RNG;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133015,"byte_end":133023,"line_start":115,"line_end":115,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133024,"byte_end":133027,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ * `RistrettoPoint::from_hash()` and","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133028,"byte_end":133067,"line_start":117,"line_end":117,"column_start":1,"column_end":40}},{"value":"/ `RistrettoPoint::hash_from_bytes()`, which perform hashing to the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133068,"byte_end":133137,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ group.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133138,"byte_end":133148,"line_start":119,"line_end":119,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133149,"byte_end":133152,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The Elligator map itself is not currently exposed.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133153,"byte_end":133207,"line_start":121,"line_end":121,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133208,"byte_end":133211,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ## Implementation","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133212,"byte_end":133233,"line_start":123,"line_end":123,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133234,"byte_end":133237,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The Decaf suggestion is to use a quotient group, such as \\\\(\\mathcal","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133238,"byte_end":133310,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ E / \\mathcal E[4]\\\\) or \\\\(2 \\mathcal E / \\mathcal E[2] \\\\), to","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133311,"byte_end":133378,"line_start":126,"line_end":126,"column_start":1,"column_end":68}},{"value":"/ implement a prime-order group using a non-prime-order curve.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133379,"byte_end":133443,"line_start":127,"line_end":127,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133444,"byte_end":133447,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This requires only changing","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133448,"byte_end":133479,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133480,"byte_end":133483,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ 1. the function for equality checking (so that two representatives","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133484,"byte_end":133554,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/    of the same coset are considered equal);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133555,"byte_end":133602,"line_start":132,"line_end":132,"column_start":1,"column_end":48}},{"value":"/ 2. the function for encoding (so that two representatives of the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133603,"byte_end":133671,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/    same coset are encoded as identical bitstrings);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133672,"byte_end":133727,"line_start":134,"line_end":134,"column_start":1,"column_end":56}},{"value":"/ 3. the function for decoding (so that only the canonical encoding of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133728,"byte_end":133800,"line_start":135,"line_end":135,"column_start":1,"column_end":73}},{"value":"/    a coset is accepted).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133801,"byte_end":133829,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133830,"byte_end":133833,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Internally, each coset is represented by a curve point; two points","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133834,"byte_end":133904,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ \\\\( P, Q \\\\) may represent the same coset in the same way that two","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133905,"byte_end":133975,"line_start":139,"line_end":139,"column_start":1,"column_end":71}},{"value":"/ points with different \\\\(X,Y,Z\\\\) coordinates may represent the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":133976,"byte_end":134043,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/ same point.  The group operations are carried out with no overhead","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134044,"byte_end":134114,"line_start":141,"line_end":141,"column_start":1,"column_end":71}},{"value":"/ using Edwards formulas.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134115,"byte_end":134142,"line_start":142,"line_end":142,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134143,"byte_end":134146,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ Notes on the details of the encoding can be found in the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134147,"byte_end":134207,"line_start":144,"line_end":144,"column_start":1,"column_end":61}},{"value":"/ [Details][ristretto_notes] section of the Ristretto website.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134208,"byte_end":134272,"line_start":145,"line_end":145,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134273,"byte_end":134276,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [cryptonote]:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134277,"byte_end":134294,"line_start":147,"line_end":147,"column_start":1,"column_end":18}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000898.html","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134295,"byte_end":134360,"line_start":148,"line_end":148,"column_start":1,"column_end":66}},{"value":"/ [ed25519_hkd]:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134361,"byte_end":134379,"line_start":149,"line_end":149,"column_start":1,"column_end":19}},{"value":"/ https://moderncrypto.org/mail-archive/curves/2017/000858.html","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134380,"byte_end":134445,"line_start":150,"line_end":150,"column_start":1,"column_end":66}},{"value":"/ [ristretto_coffee]:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134446,"byte_end":134469,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/ https://en.wikipedia.org/wiki/Ristretto","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134470,"byte_end":134513,"line_start":152,"line_end":152,"column_start":1,"column_end":44}},{"value":"/ [ristretto_notes]:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134514,"byte_end":134536,"line_start":153,"line_end":153,"column_start":1,"column_end":23}},{"value":"/ https://ristretto.group/details/index.html","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134537,"byte_end":134583,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"/ [why_ristretto]:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134584,"byte_end":134604,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/ https://ristretto.group/why_ristretto.html","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134605,"byte_end":134651,"line_start":156,"line_end":156,"column_start":1,"column_end":47}},{"value":"/ [ristretto_main]:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134652,"byte_end":134673,"line_start":157,"line_end":157,"column_start":1,"column_end":22}},{"value":"/ https://ristretto.group/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":134674,"byte_end":134702,"line_start":158,"line_end":158,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1465},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136110,"byte_end":136129,"line_start":212,"line_end":212,"column_start":12,"column_end":31},"name":"CompressedRistretto","qualname":"::ristretto::CompressedRistretto","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Ristretto point, in compressed wire format.","sig":null,"attributes":[{"value":"/ A Ristretto point, in compressed wire format.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":135890,"byte_end":135939,"line_start":207,"line_end":207,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":135940,"byte_end":135943,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ The Ristretto encoding is canonical, so two points are equal if and","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":135944,"byte_end":136015,"line_start":209,"line_end":209,"column_start":1,"column_end":72}},{"value":"/ only if their encodings are equal.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136016,"byte_end":136054,"line_start":210,"line_end":210,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1467},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136130,"byte_end":136142,"line_start":212,"line_end":212,"column_start":32,"column_end":44},"name":"0","qualname":"::ristretto::CompressedRistretto::0","value":"[u8; 32]","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136402,"byte_end":136410,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<CompressedRistretto>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Copy the bytes of this `CompressedRistretto`.\n","sig":null,"attributes":[{"value":"/ Copy the bytes of this `CompressedRistretto`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136341,"byte_end":136390,"line_start":221,"line_end":221,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136527,"byte_end":136535,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedRistretto>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" View this `CompressedRistretto` as an array of bytes.\n","sig":null,"attributes":[{"value":"/ View this `CompressedRistretto` as an array of bytes.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136458,"byte_end":136515,"line_start":226,"line_end":226,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136755,"byte_end":136765,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<CompressedRistretto>::from_slice","value":"pub fn from_slice(&[u8]) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Construct a `CompressedRistretto` from a slice of bytes.","sig":null,"attributes":[{"value":"/ Construct a `CompressedRistretto` from a slice of bytes.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136585,"byte_end":136645,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136650,"byte_end":136653,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136658,"byte_end":136670,"line_start":233,"line_end":233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136675,"byte_end":136678,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If the input `bytes` slice does not have a length of 32.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136683,"byte_end":136743,"line_start":235,"line_end":235,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":137174,"byte_end":137184,"line_start":251,"line_end":251,"column_start":12,"column_end":22},"name":"decompress","qualname":"<CompressedRistretto>::decompress","value":"pub fn decompress(&Self) -> Option<RistrettoPoint>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decompress to an `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Attempt to decompress to an `RistrettoPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136920,"byte_end":136969,"line_start":244,"line_end":244,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136974,"byte_end":136977,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136982,"byte_end":136994,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136999,"byte_end":137002,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ - `Some(RistrettoPoint)` if `self` was the canonical encoding of a point;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":137007,"byte_end":137084,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":137089,"byte_end":137092,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ - `None` if `self` was not the canonical encoding of a point.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":137097,"byte_end":137162,"line_start":250,"line_end":250,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143814,"byte_end":143828,"line_start":438,"line_end":438,"column_start":12,"column_end":26},"name":"RistrettoPoint","qualname":"::ristretto::RistrettoPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `RistrettoPoint` represents a point in the Ristretto group for\n Curve25519.  Ristretto, a variant of Decaf, constructs a\n prime-order group as a quotient group of a subgroup of (the\n Edwards form of) Curve25519.","sig":null,"attributes":[{"value":"/ A `RistrettoPoint` represents a point in the Ristretto group for","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143244,"byte_end":143312,"line_start":426,"line_end":426,"column_start":1,"column_end":69}},{"value":"/ Curve25519.  Ristretto, a variant of Decaf, constructs a","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143313,"byte_end":143373,"line_start":427,"line_end":427,"column_start":1,"column_end":61}},{"value":"/ prime-order group as a quotient group of a subgroup of (the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143374,"byte_end":143437,"line_start":428,"line_end":428,"column_start":1,"column_end":64}},{"value":"/ Edwards form of) Curve25519.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143438,"byte_end":143470,"line_start":429,"line_end":429,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143471,"byte_end":143474,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Internally, a `RistrettoPoint` is implemented as a wrapper type","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143475,"byte_end":143542,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/ around `EdwardsPoint`, with custom equality, compression, and","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143543,"byte_end":143608,"line_start":432,"line_end":432,"column_start":1,"column_end":66}},{"value":"/ decompression routines to account for the quotient.  This means that","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143609,"byte_end":143681,"line_start":433,"line_end":433,"column_start":1,"column_end":73}},{"value":"/ operations on `RistrettoPoint`s are exactly as fast as operations on","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143682,"byte_end":143754,"line_start":434,"line_end":434,"column_start":1,"column_end":73}},{"value":"/ `EdwardsPoint`s.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143755,"byte_end":143775,"line_start":435,"line_end":435,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143776,"byte_end":143779,"line_start":436,"line_end":436,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143947,"byte_end":143955,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"compress","qualname":"<RistrettoPoint>::compress","value":"pub fn compress(&Self) -> CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" Compress this point using the Ristretto encoding.\n","sig":null,"attributes":[{"value":"/ Compress this point using the Ristretto encoding.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143882,"byte_end":143935,"line_start":441,"line_end":441,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151308,"byte_end":151314,"line_start":651,"line_end":651,"column_start":12,"column_end":18},"name":"random","qualname":"<RistrettoPoint>::random","value":"pub fn random<R: RngCore + CryptoRng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","sig":null,"attributes":[{"value":"/ Return a `RistrettoPoint` chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150716,"byte_end":150799,"line_start":635,"line_end":635,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150804,"byte_end":150807,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Inputs","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150812,"byte_end":150824,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150829,"byte_end":150832,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ * `rng`: any RNG which implements the `RngCore + CryptoRng` interface.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150837,"byte_end":150911,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150916,"byte_end":150919,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150924,"byte_end":150937,"line_start":641,"line_end":641,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150942,"byte_end":150945,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ A random element of the Ristretto group.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150950,"byte_end":150994,"line_start":643,"line_end":643,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":150999,"byte_end":151002,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151007,"byte_end":151027,"line_start":645,"line_end":645,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151032,"byte_end":151035,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151040,"byte_end":151101,"line_start":647,"line_end":647,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151106,"byte_end":151168,"line_start":648,"line_end":648,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151173,"byte_end":151235,"line_start":649,"line_end":649,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151240,"byte_end":151296,"line_start":650,"line_end":650,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152637,"byte_end":152652,"line_start":688,"line_end":688,"column_start":12,"column_end":27},"name":"hash_from_bytes","qualname":"<RistrettoPoint>::hash_from_bytes","value":"pub fn hash_from_bytes<D>(&[u8]) -> RistrettoPoint where D: Digest<OutputSize\n= U64> + Default","parent":null,"children":[],"decl_id":null,"docs":" Hash a slice of bytes into a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ Hash a slice of bytes into a `RistrettoPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151520,"byte_end":151570,"line_start":658,"line_end":658,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151575,"byte_end":151578,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Takes a type parameter `D`, which is any `Digest` producing 64","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151583,"byte_end":151649,"line_start":660,"line_end":660,"column_start":5,"column_end":71}},{"value":"/ bytes of output.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151654,"byte_end":151674,"line_start":661,"line_end":661,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151679,"byte_end":151682,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `from_hash`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151687,"byte_end":151730,"line_start":663,"line_end":663,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151735,"byte_end":151738,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151743,"byte_end":151763,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151768,"byte_end":151771,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ Uses the Ristretto-flavoured Elligator 2 map, so that the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151776,"byte_end":151837,"line_start":667,"line_end":667,"column_start":5,"column_end":66}},{"value":"/ discrete log of the output point with respect to any other","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151842,"byte_end":151904,"line_start":668,"line_end":668,"column_start":5,"column_end":67}},{"value":"/ point should be unknown.  The map is applied twice and the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151909,"byte_end":151971,"line_start":669,"line_end":669,"column_start":5,"column_end":67}},{"value":"/ results are added, to ensure a uniform distribution.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":151976,"byte_end":152032,"line_start":670,"line_end":670,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152037,"byte_end":152040,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152045,"byte_end":152058,"line_start":672,"line_end":672,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152063,"byte_end":152066,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152071,"byte_end":152078,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ # extern crate curve25519_dalek_ng;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152083,"byte_end":152122,"line_start":675,"line_end":675,"column_start":5,"column_end":44}},{"value":"/ # use curve25519_dalek_ng::ristretto::RistrettoPoint;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152127,"byte_end":152184,"line_start":676,"line_end":676,"column_start":5,"column_end":62}},{"value":"/ extern crate sha2;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152189,"byte_end":152211,"line_start":677,"line_end":677,"column_start":5,"column_end":27}},{"value":"/ use sha2::Sha512;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152216,"byte_end":152237,"line_start":678,"line_end":678,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152242,"byte_end":152245,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # // Need fn main() here in comment so the doctest compiles","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152250,"byte_end":152313,"line_start":680,"line_end":680,"column_start":5,"column_end":68}},{"value":"/ # // See https://doc.rust-lang.org/book/documentation.html#documentation-as-tests","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152318,"byte_end":152403,"line_start":681,"line_end":681,"column_start":5,"column_end":90}},{"value":"/ # fn main() {","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152408,"byte_end":152425,"line_start":682,"line_end":682,"column_start":5,"column_end":22}},{"value":"/ let msg = \"To really appreciate architecture, you may even need to commit a murder\";","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152430,"byte_end":152518,"line_start":683,"line_end":683,"column_start":5,"column_end":93}},{"value":"/ let P = RistrettoPoint::hash_from_bytes::<Sha512>(msg.as_bytes());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152523,"byte_end":152593,"line_start":684,"line_end":684,"column_start":5,"column_end":75}},{"value":"/ # }","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152598,"byte_end":152605,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152610,"byte_end":152617,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152622,"byte_end":152625,"line_start":687,"line_end":687,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153104,"byte_end":153113,"line_start":701,"line_end":701,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RistrettoPoint>::from_hash","value":"pub fn from_hash<D>(D) -> RistrettoPoint where D: Digest<OutputSize = U64> +\nDefault","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from an existing `Digest` instance.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from an existing `Digest` instance.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152862,"byte_end":152930,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152935,"byte_end":152938,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Use this instead of `hash_from_bytes` if it is more convenient","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":152943,"byte_end":153009,"line_start":698,"line_end":698,"column_start":5,"column_end":71}},{"value":"/ to stream data into the `Digest` than to pass a single byte","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153014,"byte_end":153077,"line_start":699,"line_end":699,"column_start":5,"column_end":68}},{"value":"/ slice.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153082,"byte_end":153092,"line_start":700,"line_end":700,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":154012,"byte_end":154030,"line_start":723,"line_end":723,"column_start":12,"column_end":30},"name":"from_uniform_bytes","qualname":"<RistrettoPoint>::from_uniform_bytes","value":"pub fn from_uniform_bytes(&[u8; ]) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Construct a `RistrettoPoint` from 64 bytes of data.","sig":null,"attributes":[{"value":"/ Construct a `RistrettoPoint` from 64 bytes of data.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153486,"byte_end":153541,"line_start":712,"line_end":712,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153546,"byte_end":153549,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ If the input bytes are uniformly distributed, the resulting","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153554,"byte_end":153617,"line_start":714,"line_end":714,"column_start":5,"column_end":68}},{"value":"/ point will be uniformly distributed over the group, and its","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153622,"byte_end":153685,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ discrete log with respect to other points should be unknown.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153690,"byte_end":153754,"line_start":716,"line_end":716,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153759,"byte_end":153762,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ # Implementation","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153767,"byte_end":153787,"line_start":718,"line_end":718,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153792,"byte_end":153795,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This function splits the input array into two 32-byte halves,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153800,"byte_end":153865,"line_start":720,"line_end":720,"column_start":5,"column_end":70}},{"value":"/ takes the low 255 bits of each half mod p, applies the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153870,"byte_end":153928,"line_start":721,"line_end":721,"column_start":5,"column_end":63}},{"value":"/ Ristretto-flavored Elligator map to each, and adds the results.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":153933,"byte_end":154000,"line_start":722,"line_end":722,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161314,"byte_end":161349,"line_start":968,"line_end":968,"column_start":12,"column_end":47},"name":"vartime_double_scalar_mul_basepoint","qualname":"<RistrettoPoint>::vartime_double_scalar_mul_basepoint","value":"pub fn vartime_double_scalar_mul_basepoint(&Scalar, &RistrettoPoint, &Scalar)\n-> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the\n Ristretto basepoint.\n","sig":null,"attributes":[{"value":"/ Compute \\\\(aA + bB\\\\) in variable time, where \\\\(B\\\\) is the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161209,"byte_end":161273,"line_start":966,"line_end":966,"column_start":5,"column_end":69}},{"value":"/ Ristretto basepoint.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161278,"byte_end":161302,"line_start":967,"line_end":967,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":162001,"byte_end":162024,"line_start":992,"line_end":992,"column_start":12,"column_end":35},"name":"RistrettoBasepointTable","qualname":"::ristretto::RistrettoBasepointTable","value":"","parent":null,"children":[],"decl_id":null,"docs":" A precomputed table of multiples of a basepoint, used to accelerate\n scalar multiplication.","sig":null,"attributes":[{"value":"/ A precomputed table of multiples of a basepoint, used to accelerate","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161562,"byte_end":161633,"line_start":979,"line_end":979,"column_start":1,"column_end":72}},{"value":"/ scalar multiplication.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161634,"byte_end":161660,"line_start":980,"line_end":980,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161661,"byte_end":161664,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ A precomputed table of multiples of the Ristretto basepoint is","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161665,"byte_end":161731,"line_start":982,"line_end":982,"column_start":1,"column_end":67}},{"value":"/ available in the `constants` module:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161732,"byte_end":161772,"line_start":983,"line_end":983,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161773,"byte_end":161780,"line_start":984,"line_end":984,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek_ng::constants;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161781,"byte_end":161820,"line_start":985,"line_end":985,"column_start":1,"column_end":40}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161821,"byte_end":161865,"line_start":986,"line_end":986,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161866,"byte_end":161869,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161870,"byte_end":161908,"line_start":988,"line_end":988,"column_start":1,"column_end":39}},{"value":"/ let P = &a * &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161909,"byte_end":161964,"line_start":989,"line_end":989,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161965,"byte_end":161972,"line_start":990,"line_end":990,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":162622,"byte_end":162628,"line_start":1012,"line_end":1012,"column_start":12,"column_end":18},"name":"create","qualname":"<RistrettoBasepointTable>::create","value":"pub fn create(&RistrettoPoint) -> RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Create a precomputed table of multiples of the given `basepoint`.\n","sig":null,"attributes":[{"value":"/ Create a precomputed table of multiples of the given `basepoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":162541,"byte_end":162610,"line_start":1011,"line_end":1011,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":162845,"byte_end":162854,"line_start":1017,"line_end":1017,"column_start":12,"column_end":21},"name":"basepoint","qualname":"<RistrettoBasepointTable>::basepoint","value":"pub fn basepoint(&Self) -> RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" Get the basepoint for this table as a `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ Get the basepoint for this table as a `RistrettoPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":162774,"byte_end":162833,"line_start":1016,"line_end":1016,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":729},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":754}],"decl_id":null,"docs":" Various constants, such as the Ristretto and Ed25519 basepoints.","sig":null,"attributes":[{"value":"/ Various constants, such as the Ristretto and Ed25519 basepoints.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181201,"byte_end":181269,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181270,"byte_end":181273,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Most of the constants are given with","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181274,"byte_end":181314,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ `LONG_DESCRIPTIVE_UPPER_CASE_NAMES`, but they can be brought into","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181315,"byte_end":181384,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/ scope using a `let` binding:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181385,"byte_end":181417,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181418,"byte_end":181421,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181422,"byte_end":181429,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use curve25519_dalek_ng::constants;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181430,"byte_end":181469,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/ use curve25519_dalek_ng::traits::IsIdentity;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181470,"byte_end":181518,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181519,"byte_end":181522,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let B = &constants::RISTRETTO_BASEPOINT_TABLE;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181523,"byte_end":181573,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ let l = &constants::BASEPOINT_ORDER;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181574,"byte_end":181614,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181615,"byte_end":181618,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let A = l * B;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181619,"byte_end":181637,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ assert!(A.is_identity());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181638,"byte_end":181667,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181668,"byte_end":181675,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":181677,"byte_end":181702,"line_start":28,"line_end":28,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":746},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182295,"byte_end":182323,"line_start":47,"line_end":47,"column_start":11,"column_end":39},"name":"ED25519_BASEPOINT_COMPRESSED","qualname":"::constants::ED25519_BASEPOINT_COMPRESSED","value":"CompressedEdwardsY","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, in `CompressedEdwardsY` format.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, in `CompressedEdwardsY` format.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182011,"byte_end":182069,"line_start":41,"line_end":41,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182070,"byte_end":182073,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This is the little-endian byte encoding of \\\\( 4/5 \\pmod p \\\\),","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182074,"byte_end":182141,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/ which is the \\\\(y\\\\)-coordinate of the Ed25519 basepoint.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182142,"byte_end":182203,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182204,"byte_end":182207,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ The sign bit is 0 since the basepoint has \\\\(x\\\\) chosen to be positive.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182208,"byte_end":182284,"line_start":46,"line_end":46,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":747},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182702,"byte_end":182718,"line_start":54,"line_end":54,"column_start":11,"column_end":27},"name":"X25519_BASEPOINT","qualname":"::constants::X25519_BASEPOINT","value":"MontgomeryPoint","parent":null,"children":[],"decl_id":null,"docs":" The X25519 basepoint, in `MontgomeryPoint` format.\n","sig":null,"attributes":[{"value":"/ The X25519 basepoint, in `MontgomeryPoint` format.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":182637,"byte_end":182691,"line_start":53,"line_end":53,"column_start":1,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":748},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183077,"byte_end":183107,"line_start":61,"line_end":61,"column_start":11,"column_end":41},"name":"RISTRETTO_BASEPOINT_COMPRESSED","qualname":"::constants::RISTRETTO_BASEPOINT_COMPRESSED","value":"CompressedRistretto","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, in `CompressedRistretto` format.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, in `CompressedRistretto` format.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183005,"byte_end":183066,"line_start":60,"line_end":60,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":749},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183600,"byte_end":183625,"line_start":71,"line_end":71,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_POINT","qualname":"::constants::RISTRETTO_BASEPOINT_POINT","value":"RistrettoPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoPoint`.","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183426,"byte_end":183477,"line_start":67,"line_end":67,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183478,"byte_end":183481,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from `_TABLE`, which","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183482,"byte_end":183548,"line_start":69,"line_end":69,"column_start":1,"column_end":67}},{"value":"/ provides fast scalar multiplication.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183549,"byte_end":183589,"line_start":70,"line_end":70,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":750},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183867,"byte_end":183882,"line_start":77,"line_end":77,"column_start":11,"column_end":26},"name":"BASEPOINT_ORDER","qualname":"::constants::BASEPOINT_ORDER","value":"Scalar","parent":null,"children":[],"decl_id":null,"docs":" `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,\n $$\n \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.\n $$\n","sig":null,"attributes":[{"value":"/ `BASEPOINT_ORDER` is the order of the Ristretto group and of the Ed25519 basepoint, i.e.,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183686,"byte_end":183779,"line_start":73,"line_end":73,"column_start":1,"column_end":94}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183780,"byte_end":183786,"line_start":74,"line_end":74,"column_start":1,"column_end":7}},{"value":"/ \\ell = 2^\\{252\\} + 27742317777372353535851937790883648493.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183787,"byte_end":183849,"line_start":75,"line_end":75,"column_start":1,"column_end":63}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":183850,"byte_end":183856,"line_start":76,"line_end":76,"column_start":1,"column_end":7}}]},{"kind":"Const","id":{"krate":0,"index":754},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":184286,"byte_end":184311,"line_start":88,"line_end":88,"column_start":11,"column_end":36},"name":"RISTRETTO_BASEPOINT_TABLE","qualname":"::constants::RISTRETTO_BASEPOINT_TABLE","value":"RistrettoBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.\n","sig":null,"attributes":[{"value":"/ The Ristretto basepoint, as a `RistrettoBasepointTable` for scalar multiplication.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/constants.rs","byte_start":184189,"byte_end":184275,"line_start":87,"line_end":87,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":755},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":777},{"krate":0,"index":786},{"krate":0,"index":804}],"decl_id":null,"docs":" Module for common traits.\n","sig":null,"attributes":[{"value":"/ Module for common traits.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187383,"byte_end":187412,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"allow(non_snake_case)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187414,"byte_end":187439,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":765},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187742,"byte_end":187750,"line_start":26,"line_end":26,"column_start":11,"column_end":19},"name":"Identity","qualname":"::traits::Identity","value":"Identity","parent":null,"children":[{"krate":0,"index":766}],"decl_id":null,"docs":" Trait for getting the identity element of a point type.\n","sig":null,"attributes":[{"value":"/ Trait for getting the identity element of a point type.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187672,"byte_end":187731,"line_start":25,"line_end":25,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187849,"byte_end":187857,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"identity","qualname":"::traits::Identity::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":765},"children":[],"decl_id":null,"docs":" Returns the identity element of the curve.\n Can be used as a constructor.\n","sig":null,"attributes":[{"value":"/ Returns the identity element of the curve.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187757,"byte_end":187803,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/ Can be used as a constructor.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187808,"byte_end":187841,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Trait","id":{"krate":0,"index":767},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187958,"byte_end":187968,"line_start":33,"line_end":33,"column_start":11,"column_end":21},"name":"IsIdentity","qualname":"::traits::IsIdentity","value":"IsIdentity","parent":null,"children":[{"krate":0,"index":768}],"decl_id":null,"docs":" Trait for testing if a curve point is equivalent to the identity point.\n","sig":null,"attributes":[{"value":"/ Trait for testing if a curve point is equivalent to the identity point.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187872,"byte_end":187947,"line_start":32,"line_end":32,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188052,"byte_end":188063,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"is_identity","qualname":"::traits::IsIdentity::is_identity","value":"pub fn is_identity(&Self) -> bool","parent":{"krate":0,"index":767},"children":[],"decl_id":null,"docs":" Return true if this element is the identity element of the curve.\n","sig":null,"attributes":[{"value":"/ Return true if this element is the identity element of the curve.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":187975,"byte_end":188044,"line_start":34,"line_end":34,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":772},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188510,"byte_end":188524,"line_start":51,"line_end":51,"column_start":11,"column_end":25},"name":"MultiscalarMul","qualname":"::traits::MultiscalarMul","value":"MultiscalarMul","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"decl_id":null,"docs":" A trait for constant-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for constant-time multiscalar multiplication without precomputation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188419,"byte_end":188499,"line_start":50,"line_end":50,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":773},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188604,"byte_end":188609,"line_start":53,"line_end":53,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::MultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188531,"byte_end":188594,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190209,"byte_end":190224,"line_start":98,"line_end":98,"column_start":8,"column_end":23},"name":"multiscalar_mul","qualname":"::traits::MultiscalarMul::multiscalar_mul","value":"pub fn multiscalar_mul<I, J>(I, J) -> Self::Point where I: IntoIterator,\nI::Item: Borrow<Scalar>, J: IntoIterator, J::Item: Borrow<Self::Point>","parent":{"krate":0,"index":772},"children":[],"decl_id":null,"docs":" Given an iterator of (possibly secret) scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.\n $$","sig":null,"attributes":[{"value":"/ Given an iterator of (possibly secret) scalars and an iterator of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188616,"byte_end":188685,"line_start":55,"line_end":55,"column_start":5,"column_end":74}},{"value":"/ public points, compute","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188690,"byte_end":188716,"line_start":56,"line_end":56,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188721,"byte_end":188727,"line_start":57,"line_end":57,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188732,"byte_end":188771,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188776,"byte_end":188782,"line_start":59,"line_end":59,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188787,"byte_end":188790,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188795,"byte_end":188876,"line_start":61,"line_end":61,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188881,"byte_end":188884,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188889,"byte_end":188903,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188908,"byte_end":188911,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188916,"byte_end":188984,"line_start":65,"line_end":65,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188989,"byte_end":189059,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189064,"byte_end":189123,"line_start":67,"line_end":67,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189128,"byte_end":189183,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189188,"byte_end":189191,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189196,"byte_end":189203,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek_ng::constants;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189208,"byte_end":189247,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/ use curve25519_dalek_ng::traits::MultiscalarMul;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189252,"byte_end":189304,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/ use curve25519_dalek_ng::ristretto::RistrettoPoint;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189309,"byte_end":189364,"line_start":73,"line_end":73,"column_start":5,"column_end":60}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189369,"byte_end":189413,"line_start":74,"line_end":74,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189418,"byte_end":189421,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189426,"byte_end":189445,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189450,"byte_end":189488,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189493,"byte_end":189531,"line_start":78,"line_end":78,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189536,"byte_end":189574,"line_start":79,"line_end":79,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189579,"byte_end":189582,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189587,"byte_end":189605,"line_start":81,"line_end":81,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189610,"byte_end":189659,"line_start":82,"line_end":82,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189664,"byte_end":189682,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189687,"byte_end":189705,"line_start":84,"line_end":84,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189710,"byte_end":189713,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189718,"byte_end":189745,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189750,"byte_end":189772,"line_start":87,"line_end":87,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189777,"byte_end":189838,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189843,"byte_end":189898,"line_start":89,"line_end":89,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189903,"byte_end":189906,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189911,"byte_end":189947,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":189952,"byte_end":189995,"line_start":92,"line_end":92,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190000,"byte_end":190066,"line_start":93,"line_end":93,"column_start":5,"column_end":71}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190071,"byte_end":190128,"line_start":94,"line_end":94,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190133,"byte_end":190136,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190141,"byte_end":190189,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190194,"byte_end":190201,"line_start":97,"line_end":97,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":777},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190494,"byte_end":190515,"line_start":107,"line_end":107,"column_start":11,"column_end":32},"name":"VartimeMultiscalarMul","qualname":"::traits::VartimeMultiscalarMul","value":"VartimeMultiscalarMul","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":782}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication without precomputation.\n","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication without precomputation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190403,"byte_end":190483,"line_start":106,"line_end":106,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":778},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190595,"byte_end":190600,"line_start":109,"line_end":109,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimeMultiscalarMul::Point","value":"type Point;","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" The type of point being multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point being multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190522,"byte_end":190585,"line_start":108,"line_end":108,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192541,"byte_end":192565,"line_start":163,"line_end":163,"column_start":8,"column_end":32},"name":"optional_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::optional_multiscalar_mul","value":"pub fn optional_multiscalar_mul<I, J>(I, J) -> Option<Self::Point> where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n `Option`s of points, compute either `Some(Q)`, where\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n if all points were `Some(P_i)`, or else return `None`.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190607,"byte_end":190665,"line_start":111,"line_end":111,"column_start":5,"column_end":63}},{"value":"/ `Option`s of points, compute either `Some(Q)`, where","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190670,"byte_end":190726,"line_start":112,"line_end":112,"column_start":5,"column_end":61}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190731,"byte_end":190737,"line_start":113,"line_end":113,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190742,"byte_end":190781,"line_start":114,"line_end":114,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190786,"byte_end":190792,"line_start":115,"line_end":115,"column_start":5,"column_end":11}},{"value":"/ if all points were `Some(P_i)`, or else return `None`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190797,"byte_end":190855,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190860,"byte_end":190863,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190868,"byte_end":190934,"line_start":118,"line_end":118,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":190939,"byte_end":191005,"line_start":119,"line_end":119,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191010,"byte_end":191069,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191074,"byte_end":191118,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191123,"byte_end":191130,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek_ng::constants;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191135,"byte_end":191174,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/ use curve25519_dalek_ng::traits::VartimeMultiscalarMul;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191179,"byte_end":191238,"line_start":124,"line_end":124,"column_start":5,"column_end":64}},{"value":"/ use curve25519_dalek_ng::ristretto::RistrettoPoint;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191243,"byte_end":191298,"line_start":125,"line_end":125,"column_start":5,"column_end":60}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191303,"byte_end":191347,"line_start":126,"line_end":126,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191352,"byte_end":191355,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191360,"byte_end":191379,"line_start":128,"line_end":128,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191384,"byte_end":191422,"line_start":129,"line_end":129,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191427,"byte_end":191465,"line_start":130,"line_end":130,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191470,"byte_end":191508,"line_start":131,"line_end":131,"column_start":5,"column_end":43}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191513,"byte_end":191535,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191540,"byte_end":191543,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191548,"byte_end":191566,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191571,"byte_end":191620,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191625,"byte_end":191643,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191648,"byte_end":191666,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ let PQR = [P, Q, R];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191671,"byte_end":191695,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191700,"byte_end":191703,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let compressed = [P.compress(), Q.compress(), R.compress()];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191708,"byte_end":191772,"line_start":140,"line_end":140,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191777,"byte_end":191780,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ // Now we can compute A1 = a*P + b*Q + c*R using P, Q, R:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191785,"byte_end":191846,"line_start":142,"line_end":142,"column_start":5,"column_end":66}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &PQR);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191851,"byte_end":191916,"line_start":143,"line_end":143,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191921,"byte_end":191924,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ // Or using the compressed points:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191929,"byte_end":191967,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"/ let A2 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":191972,"byte_end":192026,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"/     &abc,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192031,"byte_end":192044,"line_start":147,"line_end":147,"column_start":5,"column_end":18}},{"value":"/     compressed.iter().map(|pt| pt.decompress()),","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192049,"byte_end":192101,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ );","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192106,"byte_end":192112,"line_start":149,"line_end":149,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192117,"byte_end":192120,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A2, Some(A1));","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192125,"byte_end":192154,"line_start":151,"line_end":151,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192159,"byte_end":192162,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ // It's also possible to mix compressed and uncompressed points:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192167,"byte_end":192235,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/ let A3 = RistrettoPoint::optional_multiscalar_mul(","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192240,"byte_end":192294,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/     abc.iter()","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192299,"byte_end":192317,"line_start":155,"line_end":155,"column_start":5,"column_end":23}},{"value":"/         .chain(abc.iter()),","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192322,"byte_end":192353,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/     compressed.iter().map(|pt| pt.decompress())","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192358,"byte_end":192409,"line_start":157,"line_end":157,"column_start":5,"column_end":56}},{"value":"/         .chain(PQR.iter().map(|&pt| Some(pt))),","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192414,"byte_end":192465,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/ );","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192470,"byte_end":192476,"line_start":159,"line_end":159,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192481,"byte_end":192484,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A3, Some(A1+A1));","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192489,"byte_end":192521,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192526,"byte_end":192533,"line_start":162,"line_end":162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194389,"byte_end":194412,"line_start":213,"line_end":213,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimeMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I, J>(I, J) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Self::Point>, Self::Point: Clone","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Given an iterator of public scalars and an iterator of\n public points, compute\n $$\n Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,\n $$\n using variable-time operations.","sig":null,"attributes":[{"value":"/ Given an iterator of public scalars and an iterator of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192744,"byte_end":192802,"line_start":169,"line_end":169,"column_start":5,"column_end":63}},{"value":"/ public points, compute","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192807,"byte_end":192833,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192838,"byte_end":192844,"line_start":171,"line_end":171,"column_start":5,"column_end":11}},{"value":"/ Q = c\\_1 P\\_1 + \\cdots + c\\_n P\\_n,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192849,"byte_end":192888,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192893,"byte_end":192899,"line_start":173,"line_end":173,"column_start":5,"column_end":11}},{"value":"/ using variable-time operations.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192904,"byte_end":192939,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192944,"byte_end":192947,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with two iterators of different lengths.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":192952,"byte_end":193033,"line_start":176,"line_end":176,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193038,"byte_end":193041,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193046,"byte_end":193060,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193065,"byte_end":193068,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193073,"byte_end":193141,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193146,"byte_end":193216,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193221,"byte_end":193280,"line_start":182,"line_end":182,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193285,"byte_end":193340,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193345,"byte_end":193348,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193353,"byte_end":193360,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ use curve25519_dalek_ng::constants;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193365,"byte_end":193404,"line_start":186,"line_end":186,"column_start":5,"column_end":44}},{"value":"/ use curve25519_dalek_ng::traits::VartimeMultiscalarMul;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193409,"byte_end":193468,"line_start":187,"line_end":187,"column_start":5,"column_end":64}},{"value":"/ use curve25519_dalek_ng::ristretto::RistrettoPoint;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193473,"byte_end":193528,"line_start":188,"line_end":188,"column_start":5,"column_end":60}},{"value":"/ use curve25519_dalek_ng::scalar::Scalar;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193533,"byte_end":193577,"line_start":189,"line_end":189,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193582,"byte_end":193585,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ // Some scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193590,"byte_end":193609,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ let a = Scalar::from(87329482u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193614,"byte_end":193652,"line_start":192,"line_end":192,"column_start":5,"column_end":43}},{"value":"/ let b = Scalar::from(37264829u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193657,"byte_end":193695,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/ let c = Scalar::from(98098098u64);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193700,"byte_end":193738,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193743,"byte_end":193746,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ // Some points","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193751,"byte_end":193769,"line_start":196,"line_end":196,"column_start":5,"column_end":23}},{"value":"/ let P = constants::RISTRETTO_BASEPOINT_POINT;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193774,"byte_end":193823,"line_start":197,"line_end":197,"column_start":5,"column_end":54}},{"value":"/ let Q = P + P;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193828,"byte_end":193846,"line_start":198,"line_end":198,"column_start":5,"column_end":23}},{"value":"/ let R = P + Q;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193851,"byte_end":193869,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193874,"byte_end":193877,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ // A1 = a*P + b*Q + c*R","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193882,"byte_end":193909,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/ let abc = [a,b,c];","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193914,"byte_end":193936,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ let A1 = RistrettoPoint::vartime_multiscalar_mul(&abc, &[P,Q,R]);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":193941,"byte_end":194010,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ // Note: (&abc).into_iter(): Iterator<Item=&Scalar>","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194015,"byte_end":194070,"line_start":204,"line_end":204,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194075,"byte_end":194078,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ // A2 = (-a)*P + (-b)*Q + (-c)*R","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194083,"byte_end":194119,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"/ let minus_abc = abc.iter().map(|x| -x);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194124,"byte_end":194167,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/ let A2 = RistrettoPoint::vartime_multiscalar_mul(minus_abc, &[P,Q,R]);","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194172,"byte_end":194246,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ // Note: minus_abc.into_iter(): Iterator<Item=Scalar>","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194251,"byte_end":194308,"line_start":209,"line_end":209,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194313,"byte_end":194316,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(A1.compress(), (-A2).compress());","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194321,"byte_end":194369,"line_start":211,"line_end":211,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194374,"byte_end":194381,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":786},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195953,"byte_end":195985,"line_start":255,"line_end":255,"column_start":11,"column_end":43},"name":"VartimePrecomputedMultiscalarMul","qualname":"::traits::VartimePrecomputedMultiscalarMul","value":"VartimePrecomputedMultiscalarMul: Sized","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":790},{"krate":0,"index":795},{"krate":0,"index":800}],"decl_id":null,"docs":" A trait for variable-time multiscalar multiplication with precomputation.","sig":null,"attributes":[{"value":"/ A trait for variable-time multiscalar multiplication with precomputation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194786,"byte_end":194863,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194864,"byte_end":194867,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ A general multiscalar multiplication with precomputation can be written as","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194868,"byte_end":194946,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194947,"byte_end":194953,"line_start":232,"line_end":232,"column_start":1,"column_end":7}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":194954,"byte_end":195018,"line_start":233,"line_end":233,"column_start":1,"column_end":65}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195019,"byte_end":195025,"line_start":234,"line_end":234,"column_start":1,"column_end":7}},{"value":"/ where the \\\\(B_i\\\\) are *static* points, for which precomputation","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195026,"byte_end":195095,"line_start":235,"line_end":235,"column_start":1,"column_end":70}},{"value":"/ is possible, and the \\\\(A_j\\\\) are *dynamic* points, for which","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195096,"byte_end":195162,"line_start":236,"line_end":236,"column_start":1,"column_end":67}},{"value":"/ precomputation is not possible.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195163,"byte_end":195198,"line_start":237,"line_end":237,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195199,"byte_end":195202,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ This trait has three methods for performing this computation:","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195203,"byte_end":195268,"line_start":239,"line_end":239,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195269,"byte_end":195272,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_multiscalar_mul`], which handles the special case","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195273,"byte_end":195338,"line_start":241,"line_end":241,"column_start":1,"column_end":66}},{"value":"/ where \\\\(n = 0\\\\) and there are no dynamic points;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195339,"byte_end":195393,"line_start":242,"line_end":242,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195394,"byte_end":195397,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ * [`vartime_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195398,"byte_end":195462,"line_start":244,"line_end":244,"column_start":1,"column_end":65}},{"value":"/ points as already-validated `Point`s and is infallible;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195463,"byte_end":195522,"line_start":245,"line_end":245,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195523,"byte_end":195526,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ * [`optional_mixed_multiscalar_mul`], which takes the dynamic","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195527,"byte_end":195592,"line_start":247,"line_end":247,"column_start":1,"column_end":66}},{"value":"/ points as `Option<Point>`s and returns an `Option<Point>`,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195593,"byte_end":195655,"line_start":248,"line_end":248,"column_start":1,"column_end":63}},{"value":"/ allowing decompression to be composed into the input iterators.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195656,"byte_end":195723,"line_start":249,"line_end":249,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195724,"byte_end":195727,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ All methods require that the lengths of the input iterators be","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195728,"byte_end":195794,"line_start":251,"line_end":251,"column_start":1,"column_end":67}},{"value":"/ known and matching, as if they were `ExactSizeIterator`s.  (It","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195795,"byte_end":195861,"line_start":252,"line_end":252,"column_start":1,"column_end":67}},{"value":"/ does not require `ExactSizeIterator` only because that trait is","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195862,"byte_end":195929,"line_start":253,"line_end":253,"column_start":1,"column_end":68}},{"value":"/ broken).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195930,"byte_end":195942,"line_start":254,"line_end":254,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":787},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196072,"byte_end":196077,"line_start":257,"line_end":257,"column_start":10,"column_end":15},"name":"Point","qualname":"::traits::VartimePrecomputedMultiscalarMul::Point","value":"type Point: Clone;","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" The type of point to be multiplied, e.g., `RistrettoPoint`.\n","sig":null,"attributes":[{"value":"/ The type of point to be multiplied, e.g., `RistrettoPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195999,"byte_end":196062,"line_start":256,"line_end":256,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196206,"byte_end":196209,"line_start":261,"line_end":261,"column_start":8,"column_end":11},"name":"new","qualname":"::traits::VartimePrecomputedMultiscalarMul::new","value":"pub fn new<I>(I) -> Self where I: IntoIterator, I::Item: Borrow<Self::Point>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Given the static points \\\\( B_i \\\\), perform precomputation\n and return the precomputation data.\n","sig":null,"attributes":[{"value":"/ Given the static points \\\\( B_i \\\\), perform precomputation","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196091,"byte_end":196154,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/ and return the precomputation data.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196159,"byte_end":196198,"line_start":260,"line_end":260,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196902,"byte_end":196925,"line_start":280,"line_end":280,"column_start":8,"column_end":31},"name":"vartime_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_multiscalar_mul","value":"pub fn vartime_multiscalar_mul<I>(&Self, I) -> Self::Point where\nI: IntoIterator, I::Item: Borrow<Scalar>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), compute\n $$\n Q = b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196317,"byte_end":196374,"line_start":266,"line_end":266,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), compute","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196379,"byte_end":196401,"line_start":267,"line_end":267,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196406,"byte_end":196412,"line_start":268,"line_end":268,"column_start":5,"column_end":11}},{"value":"/ Q = b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196417,"byte_end":196452,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196457,"byte_end":196463,"line_start":270,"line_end":270,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196468,"byte_end":196535,"line_start":271,"line_end":271,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196540,"byte_end":196543,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196548,"byte_end":196606,"line_start":273,"line_end":273,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196611,"byte_end":196636,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196641,"byte_end":196644,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the input must","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196649,"byte_end":196713,"line_start":276,"line_end":276,"column_start":5,"column_end":69}},{"value":"/ be convertable to iterators (`I: IntoIter`), and the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196718,"byte_end":196774,"line_start":277,"line_end":277,"column_start":5,"column_end":61}},{"value":"/ iterator's items must be `Borrow<Scalar>`, to allow iterators","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196779,"byte_end":196844,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/ returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":196849,"byte_end":196894,"line_start":279,"line_end":279,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198027,"byte_end":198056,"line_start":311,"line_end":311,"column_start":8,"column_end":37},"name":"vartime_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::vartime_mixed_multiscalar_mul","value":"pub fn vartime_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K) -> Self::Point\nwhere I: IntoIterator, I::Item: Borrow<Scalar>, J: IntoIterator,\nJ::Item: Borrow<Scalar>, K: IntoIterator, K::Item: Borrow<Self::Point>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197260,"byte_end":197317,"line_start":295,"line_end":295,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197322,"byte_end":197385,"line_start":296,"line_end":296,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197390,"byte_end":197448,"line_start":297,"line_end":297,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197453,"byte_end":197475,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197480,"byte_end":197486,"line_start":299,"line_end":299,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197491,"byte_end":197555,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197560,"byte_end":197566,"line_start":301,"line_end":301,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197571,"byte_end":197638,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197643,"byte_end":197646,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197651,"byte_end":197709,"line_start":304,"line_end":304,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197714,"byte_end":197739,"line_start":305,"line_end":305,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197744,"byte_end":197747,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ The trait bound aims for maximum flexibility: the inputs must be","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197752,"byte_end":197820,"line_start":307,"line_end":307,"column_start":5,"column_end":73}},{"value":"/ convertable to iterators (`I: IntoIter`), and the iterator's items","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197825,"byte_end":197895,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/ must be `Borrow<Scalar>` (or `Borrow<Point>`), to allow","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197900,"byte_end":197959,"line_start":309,"line_end":309,"column_start":5,"column_end":64}},{"value":"/ iterators returning either `Scalar`s or `&Scalar`s.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":197964,"byte_end":198019,"line_start":310,"line_end":310,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199437,"byte_end":199467,"line_start":352,"line_end":352,"column_start":8,"column_end":38},"name":"optional_mixed_multiscalar_mul","qualname":"::traits::VartimePrecomputedMultiscalarMul::optional_mixed_multiscalar_mul","value":"pub fn optional_mixed_multiscalar_mul<I, J, K>(&Self, I, J, K)\n-> Option<Self::Point> where I: IntoIterator, I::Item: Borrow<Scalar>,\nJ: IntoIterator, J::Item: Borrow<Scalar>, K: IntoIterator<Item =\nOption<Self::Point>>","parent":{"krate":0,"index":786},"children":[],"decl_id":null,"docs":" Given `static_scalars`, an iterator of public scalars\n \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars\n \\\\(a_i\\\\), and `dynamic_points`, an iterator of points\n \\\\(A_i\\\\), compute\n $$\n Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,\n $$\n where the \\\\(B_j\\\\) are the points that were supplied to `new`.","sig":null,"attributes":[{"value":"/ Given `static_scalars`, an iterator of public scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198614,"byte_end":198671,"line_start":334,"line_end":334,"column_start":5,"column_end":62}},{"value":"/ \\\\(b_i\\\\), `dynamic_scalars`, an iterator of public scalars","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198676,"byte_end":198739,"line_start":335,"line_end":335,"column_start":5,"column_end":68}},{"value":"/ \\\\(a_i\\\\), and `dynamic_points`, an iterator of points","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198744,"byte_end":198802,"line_start":336,"line_end":336,"column_start":5,"column_end":63}},{"value":"/ \\\\(A_i\\\\), compute","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198807,"byte_end":198829,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198834,"byte_end":198840,"line_start":338,"line_end":338,"column_start":5,"column_end":11}},{"value":"/ Q = a_1 A_1 + \\cdots + a_n A_n + b_1 B_1 + \\cdots + b_m B_m,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198845,"byte_end":198909,"line_start":339,"line_end":339,"column_start":5,"column_end":69}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198914,"byte_end":198920,"line_start":340,"line_end":340,"column_start":5,"column_end":11}},{"value":"/ where the \\\\(B_j\\\\) are the points that were supplied to `new`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198925,"byte_end":198992,"line_start":341,"line_end":341,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":198997,"byte_end":199000,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ If any of the dynamic points were `None`, return `None`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199005,"byte_end":199065,"line_start":343,"line_end":343,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199070,"byte_end":199073,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this function with iterators of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199078,"byte_end":199136,"line_start":345,"line_end":345,"column_start":5,"column_end":63}},{"value":"/ inconsistent lengths.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199141,"byte_end":199166,"line_start":346,"line_end":346,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199171,"byte_end":199174,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This function is particularly useful when verifying statements","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199179,"byte_end":199245,"line_start":348,"line_end":348,"column_start":5,"column_end":71}},{"value":"/ involving compressed points.  Accepting `Option<Point>` allows","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199250,"byte_end":199316,"line_start":349,"line_end":349,"column_start":5,"column_end":71}},{"value":"/ inlining point decompression into the multiscalar call,","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199321,"byte_end":199380,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/ avoiding the need for temporary buffers.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":199385,"byte_end":199429,"line_start":351,"line_end":351,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202858,"byte_end":202869,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<FieldElement>::is_negative","value":"pub fn is_negative(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is negative, in the sense\n used in the ed25519 paper: `x` is negative if the low bit is\n set.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is negative, in the sense","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202596,"byte_end":202658,"line_start":73,"line_end":73,"column_start":5,"column_end":67}},{"value":"/ used in the ed25519 paper: `x` is negative if the low bit is","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202663,"byte_end":202727,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/ set.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202732,"byte_end":202740,"line_start":75,"line_end":75,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202745,"byte_end":202748,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202753,"byte_end":202765,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202770,"byte_end":202773,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ If negative, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202778,"byte_end":202846,"line_start":79,"line_end":79,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":203126,"byte_end":203133,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<FieldElement>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement` is zero.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement` is zero.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202967,"byte_end":203012,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":203017,"byte_end":203020,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":203025,"byte_end":203037,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":203042,"byte_end":203045,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If zero, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":203050,"byte_end":203114,"line_start":89,"line_end":89,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":206596,"byte_end":206602,"line_start":178,"line_end":178,"column_start":12,"column_end":18},"name":"invert","qualname":"<FieldElement>::invert","value":"pub fn invert(&Self) -> FieldElement","parent":null,"children":[],"decl_id":null,"docs":" Given a nonzero field element, compute its inverse.","sig":null,"attributes":[{"value":"/ Given a nonzero field element, compute its inverse.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":206370,"byte_end":206425,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":206430,"byte_end":206433,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The inverse is computed as self^(p-2), since","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":206438,"byte_end":206486,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/ x^(p-2)x = x^(p-1) = 1 (mod p).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":206491,"byte_end":206526,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":206531,"byte_end":206534,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This function returns zero on input zero.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":206539,"byte_end":206584,"line_start":177,"line_end":177,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207916,"byte_end":207928,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"sqrt_ratio_i","qualname":"<FieldElement>::sqrt_ratio_i","value":"pub fn sqrt_ratio_i(&FieldElement, &FieldElement) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`\n or `sqrt(i*u/v)` in constant time.","sig":null,"attributes":[{"value":"/ Given `FieldElements` `u` and `v`, compute either `sqrt(u/v)`","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207393,"byte_end":207458,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/ or `sqrt(i*u/v)` in constant time.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207463,"byte_end":207501,"line_start":202,"line_end":202,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207506,"byte_end":207509,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207514,"byte_end":207575,"line_start":204,"line_end":204,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207580,"byte_end":207583,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207588,"byte_end":207600,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207605,"byte_end":207608,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(u/v))  ` if `v` is nonzero and `u/v` is square;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207613,"byte_end":207685,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ - `(Choice(1), zero)        ` if `u` is zero;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207690,"byte_end":207739,"line_start":209,"line_end":209,"column_start":5,"column_end":54}},{"value":"/ - `(Choice(0), zero)        ` if `v` is zero and `u` is nonzero;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207744,"byte_end":207812,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ - `(Choice(0), +sqrt(i*u/v))` if `u/v` is nonsquare (so `i*u/v` is square).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207817,"byte_end":207896,"line_start":211,"line_end":211,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":207901,"byte_end":207904,"line_start":212,"line_end":212,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":210237,"byte_end":210244,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"invsqrt","qualname":"<FieldElement>::invsqrt","value":"pub fn invsqrt(&Self) -> (Choice, FieldElement)","parent":null,"children":[],"decl_id":null,"docs":" Attempt to compute `sqrt(1/self)` in constant time.","sig":null,"attributes":[{"value":"/ Attempt to compute `sqrt(1/self)` in constant time.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":209789,"byte_end":209844,"line_start":261,"line_end":261,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":209849,"byte_end":209852,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Convenience wrapper around `sqrt_ratio_i`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":209857,"byte_end":209903,"line_start":263,"line_end":263,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":209908,"byte_end":209911,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function always returns the nonnegative square root.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":209916,"byte_end":209977,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":209982,"byte_end":209985,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":209990,"byte_end":210002,"line_start":267,"line_end":267,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":210007,"byte_end":210010,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ - `(Choice(1), +sqrt(1/self))  ` if `self` is a nonzero square;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":210015,"byte_end":210082,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/ - `(Choice(0), zero)           ` if `self` is zero;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":210087,"byte_end":210142,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"/ - `(Choice(0), +sqrt(i/self))  ` if `self` is a nonzero nonsquare;","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":210147,"byte_end":210217,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":210222,"byte_end":210225,"line_start":272,"line_end":272,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1545},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222908,"byte_end":222924,"line_start":52,"line_end":52,"column_start":12,"column_end":28},"name":"FieldElement2625","qualname":"::backend::serial::u32::field::FieldElement2625","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `FieldElement2625` represents an element of the field\n \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","sig":null,"attributes":[{"value":"/ A `FieldElement2625` represents an element of the field","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":221929,"byte_end":221988,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ \\\\( \\mathbb Z / (2\\^{255} - 19)\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":221989,"byte_end":222028,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222029,"byte_end":222032,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ In the 32-bit implementation, a `FieldElement` is represented in","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222033,"byte_end":222101,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ radix \\\\(2\\^{25.5}\\\\) as ten `u32`s.  This means that a field","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222102,"byte_end":222167,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/ element \\\\(x\\\\) is represented as","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222168,"byte_end":222205,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222206,"byte_end":222212,"line_start":35,"line_end":35,"column_start":1,"column_end":7}},{"value":"/ x = \\sum\\_{i=0}\\^9 x\\_i 2\\^{\\lceil i \\frac {51} 2 \\rceil}","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222213,"byte_end":222274,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/   = x\\_0 + x\\_1 2\\^{26} + x\\_2 2\\^{51} + x\\_3 2\\^{77} + \\cdots + x\\_9 2\\^{230};","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222275,"byte_end":222358,"line_start":37,"line_end":37,"column_start":1,"column_end":84}},{"value":"/ $$","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222359,"byte_end":222365,"line_start":38,"line_end":38,"column_start":1,"column_end":7}},{"value":"/ the coefficients are alternately bounded by \\\\(2\\^{25}\\\\) and","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222366,"byte_end":222431,"line_start":39,"line_end":39,"column_start":1,"column_end":66}},{"value":"/ \\\\(2\\^{26}\\\\).  The limbs are allowed to grow between reductions up","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222432,"byte_end":222503,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/ to \\\\(2\\^{25+b}\\\\) or \\\\(2\\^{26+b}\\\\), where \\\\(b = 1.75\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222504,"byte_end":222568,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222569,"byte_end":222572,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222573,"byte_end":222583,"line_start":43,"line_end":43,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222584,"byte_end":222587,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The `curve25519_dalek::field` module provides a type alias","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222588,"byte_end":222650,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ `curve25519_dalek::field::FieldElement` to either `FieldElement51`","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222651,"byte_end":222721,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ or `FieldElement2625`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222722,"byte_end":222748,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222749,"byte_end":222752,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The backend-specific type `FieldElement2625` should not be used","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222753,"byte_end":222820,"line_start":49,"line_end":49,"column_start":1,"column_end":68}},{"value":"/ outside of the `curve25519_dalek::field` module.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222821,"byte_end":222873,"line_start":50,"line_end":50,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":234142,"byte_end":234148,"line_start":279,"line_end":279,"column_start":12,"column_end":18},"name":"negate","qualname":"<FieldElement2625>::negate","value":"pub fn negate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the sign of this field element\n","sig":null,"attributes":[{"value":"/ Invert the sign of this field element","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":234089,"byte_end":234130,"line_start":278,"line_end":278,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":234856,"byte_end":234860,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"zero","qualname":"<FieldElement2625>::zero","value":"pub fn zero() -> FieldElement2625","parent":null,"children":[],"decl_id":null,"docs":" Construct zero.\n","sig":null,"attributes":[{"value":"/ Construct zero.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":234825,"byte_end":234844,"line_start":296,"line_end":296,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":234985,"byte_end":234988,"line_start":302,"line_end":302,"column_start":12,"column_end":15},"name":"one","qualname":"<FieldElement2625>::one","value":"pub fn one() -> FieldElement2625","parent":null,"children":[],"decl_id":null,"docs":" Construct one.\n","sig":null,"attributes":[{"value":"/ Construct one.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":234955,"byte_end":234973,"line_start":301,"line_end":301,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":235112,"byte_end":235121,"line_start":307,"line_end":307,"column_start":12,"column_end":21},"name":"minus_one","qualname":"<FieldElement2625>::minus_one","value":"pub fn minus_one() -> FieldElement2625","parent":null,"children":[],"decl_id":null,"docs":" Construct -1.\n","sig":null,"attributes":[{"value":"/ Construct -1.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":235083,"byte_end":235100,"line_start":306,"line_end":306,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":235380,"byte_end":235385,"line_start":315,"line_end":315,"column_start":12,"column_end":17},"name":"pow2k","qualname":"<FieldElement2625>::pow2k","value":"pub fn pow2k(&Self, u32) -> FieldElement2625","parent":null,"children":[],"decl_id":null,"docs":" Given `k > 0`, return `self^(2^k)`.\n","sig":null,"attributes":[{"value":"/ Given `k > 0`, return `self^(2^k)`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":235329,"byte_end":235368,"line_start":314,"line_end":314,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":238057,"byte_end":238067,"line_start":389,"line_end":389,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FieldElement2625>::from_bytes","value":"pub fn from_bytes(&[u8; ]) -> FieldElement2625","parent":null,"children":[],"decl_id":null,"docs":" Load a `FieldElement51` from the low 255 bits of a 256-bit\n input.","sig":null,"attributes":[{"value":"/ Load a `FieldElement51` from the low 255 bits of a 256-bit","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237576,"byte_end":237638,"line_start":378,"line_end":378,"column_start":5,"column_end":67}},{"value":"/ input.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237643,"byte_end":237653,"line_start":379,"line_end":379,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237658,"byte_end":237661,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237666,"byte_end":237679,"line_start":381,"line_end":381,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237684,"byte_end":237687,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This function does not check that the input used the canonical","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237692,"byte_end":237758,"line_start":383,"line_end":383,"column_start":5,"column_end":71}},{"value":"/ representative.  It masks the high bit, but it will happily","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237763,"byte_end":237826,"line_start":384,"line_end":384,"column_start":5,"column_end":68}},{"value":"/ decode 2^255 - 18 to 1.  Applications that require a canonical","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237831,"byte_end":237897,"line_start":385,"line_end":385,"column_start":5,"column_end":71}},{"value":"/ encoding of every field element should decode, re-encode to","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237902,"byte_end":237965,"line_start":386,"line_end":386,"column_start":5,"column_end":68}},{"value":"/ the canonical encoding, and check that the input was","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":237970,"byte_end":238026,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/ canonical.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":238031,"byte_end":238045,"line_start":388,"line_end":388,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":239064,"byte_end":239072,"line_start":418,"line_end":418,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<FieldElement2625>::to_bytes","value":"pub fn to_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serialize this `FieldElement51` to a 32-byte array.  The\n encoding is canonical.\n","sig":null,"attributes":[{"value":"/ Serialize this `FieldElement51` to a 32-byte array.  The","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":238961,"byte_end":239021,"line_start":416,"line_end":416,"column_start":5,"column_end":65}},{"value":"/ encoding is canonical.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":239026,"byte_end":239052,"line_start":417,"line_end":417,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":244895,"byte_end":244901,"line_start":565,"line_end":565,"column_start":12,"column_end":18},"name":"square","qualname":"<FieldElement2625>::square","value":"pub fn square(&Self) -> FieldElement2625","parent":null,"children":[],"decl_id":null,"docs":" Compute `self^2`.\n","sig":null,"attributes":[{"value":"/ Compute `self^2`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":244862,"byte_end":244883,"line_start":564,"line_end":564,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":245031,"byte_end":245038,"line_start":570,"line_end":570,"column_start":12,"column_end":19},"name":"square2","qualname":"<FieldElement2625>::square2","value":"pub fn square2(&Self) -> FieldElement2625","parent":null,"children":[],"decl_id":null,"docs":" Compute `2*self^2`.\n","sig":null,"attributes":[{"value":"/ Compute `2*self^2`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":244996,"byte_end":245019,"line_start":569,"line_end":569,"column_start":5,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":1050},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":271869,"byte_end":271892,"line_start":93,"line_end":93,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_POINT","qualname":"::backend::serial::u32::constants::ED25519_BASEPOINT_POINT","value":"EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" The Ed25519 basepoint, as an `EdwardsPoint`.","sig":null,"attributes":[{"value":"/ The Ed25519 basepoint, as an `EdwardsPoint`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":271653,"byte_end":271701,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":271702,"byte_end":271705,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This is called `_POINT` to distinguish it from","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":271706,"byte_end":271756,"line_start":90,"line_end":90,"column_start":1,"column_end":51}},{"value":"/ `ED25519_BASEPOINT_TABLE`, which should be used for scalar","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":271757,"byte_end":271819,"line_start":91,"line_end":91,"column_start":1,"column_end":63}},{"value":"/ multiplication (it's much faster).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":271820,"byte_end":271858,"line_start":92,"line_end":92,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1051},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272971,"byte_end":272984,"line_start":120,"line_end":120,"column_start":11,"column_end":24},"name":"EIGHT_TORSION","qualname":"::backend::serial::u32::constants::EIGHT_TORSION","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","sig":null,"attributes":[{"value":"/ The 8-torsion subgroup \\\\(\\mathcal E [8]\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272429,"byte_end":272477,"line_start":109,"line_end":109,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272478,"byte_end":272481,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ In the case of Curve25519, it is cyclic; the \\\\(i\\\\)-th element of","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272482,"byte_end":272552,"line_start":111,"line_end":111,"column_start":1,"column_end":71}},{"value":"/ the array is \\\\([i]P\\\\), where \\\\(P\\\\) is a point of order \\\\(8\\\\)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272553,"byte_end":272623,"line_start":112,"line_end":112,"column_start":1,"column_end":71}},{"value":"/ generating \\\\(\\mathcal E[8]\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272624,"byte_end":272659,"line_start":113,"line_end":113,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272660,"byte_end":272663,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Thus \\\\(\\mathcal E[4]\\\\) is the points indexed by `0,2,4,6`, and","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272664,"byte_end":272732,"line_start":115,"line_end":115,"column_start":1,"column_end":69}},{"value":"/ \\\\(\\mathcal E[2]\\\\) is the points indexed by `0,4`.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272733,"byte_end":272788,"line_start":116,"line_end":116,"column_start":1,"column_end":56}},{"value":"/ The Ed25519 basepoint has y = 4/5.  This is called `_POINT` to","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272789,"byte_end":272855,"line_start":117,"line_end":117,"column_start":1,"column_end":67}},{"value":"/ distinguish it from `_TABLE`, which should be used for scalar","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272856,"byte_end":272921,"line_start":118,"line_end":118,"column_start":1,"column_end":66}},{"value":"/ multiplication (it's much faster).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":272922,"byte_end":272960,"line_start":119,"line_end":119,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1053},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":273130,"byte_end":273160,"line_start":124,"line_end":124,"column_start":11,"column_end":41},"name":"EIGHT_TORSION_INNER_DOC_HIDDEN","qualname":"::backend::serial::u32::constants::EIGHT_TORSION_INNER_DOC_HIDDEN","value":"[EdwardsPoint; ]","parent":null,"children":[],"decl_id":null,"docs":" Inner item used to hide limb constants from cargo doc output.\n","sig":null,"attributes":[{"value":"/ Inner item used to hide limb constants from cargo doc output.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":273039,"byte_end":273104,"line_start":122,"line_end":122,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1055},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":276983,"byte_end":277006,"line_start":221,"line_end":221,"column_start":11,"column_end":34},"name":"ED25519_BASEPOINT_TABLE","qualname":"::backend::serial::u32::constants::ED25519_BASEPOINT_TABLE","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).\n","sig":null,"attributes":[{"value":"/ Table containing precomputed multiples of the Ed25519 basepoint \\\\(B = (x, 4/5)\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":276885,"byte_end":276972,"line_start":220,"line_end":220,"column_start":1,"column_end":88}}]},{"kind":"Const","id":{"krate":0,"index":1056},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":277176,"byte_end":277216,"line_start":225,"line_end":225,"column_start":11,"column_end":51},"name":"ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","qualname":"::backend::serial::u32::constants::ED25519_BASEPOINT_TABLE_INNER_DOC_HIDDEN","value":"EdwardsBasepointTable","parent":null,"children":[],"decl_id":null,"docs":" Inner constant, used to avoid filling the docs with precomputed points.\n","sig":null,"attributes":[{"value":"/ Inner constant, used to avoid filling the docs with precomputed points.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/constants.rs","byte_start":277075,"byte_end":277150,"line_start":223,"line_end":223,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490438,"byte_end":490453,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"ProjectivePoint","qualname":"::backend::serial::curve_models::ProjectivePoint","value":"ProjectivePoint { X, Y, Z }","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564}],"decl_id":null,"docs":" A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb\n P\\^2\\\\) model of the curve.\n A point \\\\((x,y)\\\\) in the affine model corresponds to\n \\\\((x:y:1)\\\\).","sig":null,"attributes":[{"value":"/ A `ProjectivePoint` is a point \\\\((X:Y:Z)\\\\) on the \\\\(\\mathbb","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490098,"byte_end":490164,"line_start":143,"line_end":143,"column_start":1,"column_end":67}},{"value":"/ P\\^2\\\\) model of the curve.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490165,"byte_end":490196,"line_start":144,"line_end":144,"column_start":1,"column_end":32}},{"value":"/ A point \\\\((x,y)\\\\) in the affine model corresponds to","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490197,"byte_end":490255,"line_start":145,"line_end":145,"column_start":1,"column_end":59}},{"value":"/ \\\\((x:y:1)\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490256,"byte_end":490274,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490275,"byte_end":490278,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490279,"byte_end":490351,"line_start":148,"line_end":148,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490352,"byte_end":490403,"line_start":149,"line_end":149,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1562},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490464,"byte_end":490465,"line_start":152,"line_end":152,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::ProjectivePoint::X","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1563},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490489,"byte_end":490490,"line_start":153,"line_end":153,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::ProjectivePoint::Y","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1564},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490514,"byte_end":490515,"line_start":154,"line_end":154,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectivePoint::Z","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1568},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490926,"byte_end":490940,"line_start":166,"line_end":166,"column_start":12,"column_end":26},"name":"CompletedPoint","qualname":"::backend::serial::curve_models::CompletedPoint","value":"CompletedPoint { X, Y, Z, T }","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":1572}],"decl_id":null,"docs":" A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb\n P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.\n A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))\n \\\\).","sig":null,"attributes":[{"value":"/ A `CompletedPoint` is a point \\\\(((X:Z), (Y:T))\\\\) on the \\\\(\\mathbb","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490534,"byte_end":490606,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"/ P\\^1 \\times \\mathbb P\\^1 \\\\) model of the curve.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490607,"byte_end":490659,"line_start":158,"line_end":158,"column_start":1,"column_end":53}},{"value":"/ A point (x,y) in the affine model corresponds to \\\\( ((x:1),(y:1))","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490660,"byte_end":490730,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"/ \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490731,"byte_end":490739,"line_start":160,"line_end":160,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490740,"byte_end":490743,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490744,"byte_end":490816,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490817,"byte_end":490868,"line_start":163,"line_end":163,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490892,"byte_end":490914,"line_start":165,"line_end":165,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1569},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490951,"byte_end":490952,"line_start":167,"line_end":167,"column_start":9,"column_end":10},"name":"X","qualname":"::backend::serial::curve_models::CompletedPoint::X","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1570},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":490976,"byte_end":490977,"line_start":168,"line_end":168,"column_start":9,"column_end":10},"name":"Y","qualname":"::backend::serial::curve_models::CompletedPoint::Y","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1571},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491001,"byte_end":491002,"line_start":169,"line_end":169,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::CompletedPoint::Z","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1572},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491026,"byte_end":491027,"line_start":170,"line_end":170,"column_start":9,"column_end":10},"name":"T","qualname":"::backend::serial::curve_models::CompletedPoint::T","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1576},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491422,"byte_end":491438,"line_start":181,"line_end":181,"column_start":12,"column_end":28},"name":"AffineNielsPoint","qualname":"::backend::serial::curve_models::AffineNielsPoint","value":"AffineNielsPoint { y_plus_x, y_minus_x, xy2d }","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579}],"decl_id":null,"docs":" A pre-computed point in the affine model for the curve, represented as\n \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point in the affine model for the curve, represented as","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491046,"byte_end":491120,"line_start":173,"line_end":173,"column_start":1,"column_end":75}},{"value":"/ \\\\((y+x, y-x, 2dxy)\\\\) in \"Niels coordinates\".","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491121,"byte_end":491171,"line_start":174,"line_end":174,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491172,"byte_end":491175,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491176,"byte_end":491248,"line_start":176,"line_end":176,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491249,"byte_end":491300,"line_start":177,"line_end":177,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491388,"byte_end":491410,"line_start":180,"line_end":180,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1577},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491449,"byte_end":491457,"line_start":182,"line_end":182,"column_start":9,"column_end":17},"name":"y_plus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_plus_x","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1578},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491482,"byte_end":491491,"line_start":183,"line_end":183,"column_start":9,"column_end":18},"name":"y_minus_x","qualname":"::backend::serial::curve_models::AffineNielsPoint::y_minus_x","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1579},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491515,"byte_end":491519,"line_start":184,"line_end":184,"column_start":9,"column_end":13},"name":"xy2d","qualname":"::backend::serial::curve_models::AffineNielsPoint::xy2d","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1590},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492018,"byte_end":492038,"line_start":201,"line_end":201,"column_start":12,"column_end":32},"name":"ProjectiveNielsPoint","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint","value":"ProjectiveNielsPoint { Y_plus_X, Y_minus_X, Z, T2d }","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594}],"decl_id":null,"docs":" A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the\n curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","sig":null,"attributes":[{"value":"/ A pre-computed point on the \\\\( \\mathbb P\\^3 \\\\) model for the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491712,"byte_end":491778,"line_start":195,"line_end":195,"column_start":1,"column_end":67}},{"value":"/ curve, represented as \\\\((Y+X, Y-X, Z, 2dXY)\\\\) in \"Niels coordinates\".","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491779,"byte_end":491854,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491855,"byte_end":491858,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ More details on the relationships between the different curve models","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491859,"byte_end":491931,"line_start":198,"line_end":198,"column_start":1,"column_end":73}},{"value":"/ can be found in the module-level documentation.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491932,"byte_end":491983,"line_start":199,"line_end":199,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1591},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492049,"byte_end":492057,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"name":"Y_plus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_plus_X","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1592},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492082,"byte_end":492091,"line_start":203,"line_end":203,"column_start":9,"column_end":18},"name":"Y_minus_X","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Y_minus_X","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1593},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492115,"byte_end":492116,"line_start":204,"line_end":204,"column_start":9,"column_end":10},"name":"Z","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::Z","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1594},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492148,"byte_end":492151,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"name":"T2d","qualname":"::backend::serial::curve_models::ProjectiveNielsPoint::T2d","value":"backend::serial::u32::field::FieldElement2625","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496358,"byte_end":496369,"line_start":332,"line_end":332,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<ProjectivePoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the\n \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^2 \\\\) model to the","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496185,"byte_end":496250,"line_start":328,"line_end":328,"column_start":5,"column_end":70}},{"value":"/ \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496255,"byte_end":496286,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496291,"byte_end":496294,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M + 1 \\mathrm S\\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496299,"byte_end":496346,"line_start":331,"line_end":331,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496777,"byte_end":496790,"line_start":347,"line_end":347,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<CompletedPoint>::to_projective","value":"pub fn to_projective(&Self) -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496597,"byte_end":496665,"line_start":343,"line_end":343,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^2 \\\\) model.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496670,"byte_end":496718,"line_start":344,"line_end":344,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496723,"byte_end":496726,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(3 \\mathrm M \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496731,"byte_end":496765,"line_start":346,"line_end":346,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":497148,"byte_end":497159,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"name":"to_extended","qualname":"<CompletedPoint>::to_extended","value":"pub fn to_extended(&Self) -> EdwardsPoint","parent":null,"children":[],"decl_id":null,"docs":" Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1\n \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","sig":null,"attributes":[{"value":"/ Convert this point from the \\\\( \\mathbb P\\^1 \\times \\mathbb P\\^1","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496968,"byte_end":497036,"line_start":355,"line_end":355,"column_start":5,"column_end":73}},{"value":"/ \\\\) model to the \\\\( \\mathbb P\\^3 \\\\) model.","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":497041,"byte_end":497089,"line_start":356,"line_end":356,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":497094,"byte_end":497097,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This costs \\\\(4 \\mathrm M \\\\).","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":497102,"byte_end":497136,"line_start":358,"line_end":358,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":497608,"byte_end":497614,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"double","qualname":"<ProjectivePoint>::double","value":"pub fn double(&Self) -> CompletedPoint","parent":null,"children":[],"decl_id":null,"docs":" Double this point: return self + self\n","sig":null,"attributes":[{"value":"/ Double this point: return self + self","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":497555,"byte_end":497596,"line_start":374,"line_end":374,"column_start":5,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":12527,"byte_end":12533,"line_start":202,"line_end":202,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14341,"byte_end":14347,"line_start":255,"line_end":255,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14509,"byte_end":14515,"line_start":261,"line_end":261,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14538,"byte_end":14544,"line_start":262,"line_end":262,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14666,"byte_end":14672,"line_start":268,"line_end":268,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14791,"byte_end":14797,"line_start":274,"line_end":274,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":15034,"byte_end":15040,"line_start":283,"line_end":283,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":15533,"byte_end":15539,"line_start":300,"line_end":300,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":16484,"byte_end":16490,"line_start":326,"line_end":326,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":17837,"byte_end":17843,"line_start":363,"line_end":363,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":17958,"byte_end":17964,"line_start":370,"line_end":370,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":19907,"byte_end":19913,"line_start":432,"line_end":432,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20119,"byte_end":20125,"line_start":444,"line_end":444,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20326,"byte_end":20332,"line_start":456,"line_end":456,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20414,"byte_end":20420,"line_start":462,"line_end":462,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20576,"byte_end":20582,"line_start":470,"line_end":470,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20815,"byte_end":20821,"line_start":479,"line_end":479,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":21054,"byte_end":21060,"line_start":488,"line_end":488,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":21795,"byte_end":21801,"line_start":518,"line_end":518,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22034,"byte_end":22040,"line_start":527,"line_end":527,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22115,"byte_end":22121,"line_start":533,"line_end":533,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":239},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43564,"byte_end":43578,"line_start":1119,"line_end":1119,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68473,"byte_end":68488,"line_start":73,"line_end":73,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68724,"byte_end":68739,"line_start":82,"line_end":82,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68843,"byte_end":68858,"line_start":88,"line_end":88,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68979,"byte_end":68994,"line_start":94,"line_end":94,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69016,"byte_end":69031,"line_start":96,"line_end":96,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69102,"byte_end":69117,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":71238,"byte_end":71253,"line_start":168,"line_end":168,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":71430,"byte_end":71445,"line_start":177,"line_end":177,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":71564,"byte_end":71579,"line_start":183,"line_end":183,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":71906,"byte_end":71921,"line_start":196,"line_end":196,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":75388,"byte_end":75403,"line_start":298,"line_end":298,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84076,"byte_end":84094,"line_start":156,"line_end":156,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84229,"byte_end":84247,"line_start":162,"line_end":162,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84402,"byte_end":84420,"line_start":168,"line_end":168,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":89783,"byte_end":89801,"line_start":323,"line_end":323,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90081,"byte_end":90099,"line_start":332,"line_end":332,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90196,"byte_end":90214,"line_start":338,"line_end":338,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90569,"byte_end":90581,"line_start":353,"line_end":353,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90825,"byte_end":90837,"line_start":364,"line_end":364,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":91136,"byte_end":91148,"line_start":374,"line_end":374,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":91584,"byte_end":91596,"line_start":387,"line_end":387,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":92202,"byte_end":92214,"line_start":402,"line_end":402,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":92777,"byte_end":92789,"line_start":415,"line_end":415,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":92907,"byte_end":92919,"line_start":421,"line_end":421,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":93103,"byte_end":93115,"line_start":427,"line_end":427,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":95590,"byte_end":95602,"line_start":502,"line_end":502,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":96277,"byte_end":96289,"line_start":522,"line_end":522,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":96820,"byte_end":96832,"line_start":539,"line_end":539,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":97036,"byte_end":97048,"line_start":547,"line_end":547,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":97674,"byte_end":97686,"line_start":577,"line_end":577,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":97994,"byte_end":98006,"line_start":589,"line_end":589,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":102711,"byte_end":102723,"line_start":735,"line_end":735,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":103406,"byte_end":103427,"line_start":755,"line_end":755,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":105961,"byte_end":105982,"line_start":824,"line_end":824,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":106752,"byte_end":106764,"line_start":846,"line_end":846,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":109293,"byte_end":109305,"line_start":926,"line_end":926,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":109545,"byte_end":109566,"line_start":933,"line_end":933,"column_start":16,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136170,"byte_end":136189,"line_start":214,"line_end":214,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136315,"byte_end":136334,"line_start":220,"line_end":220,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":139274,"byte_end":139293,"line_start":307,"line_end":307,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":139404,"byte_end":139423,"line_start":313,"line_end":313,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143861,"byte_end":143875,"line_start":440,"line_end":440,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":154647,"byte_end":154661,"line_start":740,"line_end":740,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":154777,"byte_end":154791,"line_start":746,"line_end":746,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":155059,"byte_end":155073,"line_start":756,"line_end":756,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":155205,"byte_end":155219,"line_start":762,"line_end":762,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":155700,"byte_end":155714,"line_start":779,"line_end":779,"column_start":13,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":156234,"byte_end":156248,"line_start":795,"line_end":795,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":156786,"byte_end":156800,"line_start":813,"line_end":813,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":157009,"byte_end":157023,"line_start":821,"line_end":821,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":157392,"byte_end":157406,"line_start":841,"line_end":841,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":157540,"byte_end":157554,"line_start":849,"line_end":849,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161188,"byte_end":161202,"line_start":965,"line_end":965,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":162511,"byte_end":162534,"line_start":1010,"line_end":1010,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":163159,"byte_end":163173,"line_start":1026,"line_end":1026,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":164400,"byte_end":164419,"line_start":1067,"line_end":1067,"column_start":16,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":164585,"byte_end":164599,"line_start":1073,"line_end":1073,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188268,"byte_end":188269,"line_start":41,"line_end":41,"column_start":24,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202079,"byte_end":202091,"line_start":55,"line_end":55,"column_start":13,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202115,"byte_end":202127,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202257,"byte_end":202269,"line_start":63,"line_end":63,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202577,"byte_end":202589,"line_start":72,"line_end":72,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222965,"byte_end":222981,"line_start":54,"line_end":54,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":223142,"byte_end":223158,"line_start":60,"line_end":60,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":223269,"byte_end":223285,"line_start":66,"line_end":66,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":223721,"byte_end":223737,"line_start":83,"line_end":83,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":224910,"byte_end":224926,"line_start":113,"line_end":113,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":231797,"byte_end":231813,"line_start":230,"line_end":230,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":234066,"byte_end":234082,"line_start":277,"line_end":277,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":939},{"krate":0,"index":945},{"krate":0,"index":951},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246019,"byte_end":246027,"line_start":24,"line_end":24,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246180,"byte_end":246188,"line_start":30,"line_end":30,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246276,"byte_end":246284,"line_start":36,"line_end":36,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246415,"byte_end":246423,"line_start":43,"line_end":43,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246642,"byte_end":246650,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491560,"byte_end":491576,"line_start":187,"line_end":187,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492193,"byte_end":492213,"line_start":208,"line_end":208,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492584,"byte_end":492599,"line_start":223,"line_end":223,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492813,"byte_end":492833,"line_start":233,"line_end":233,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":493123,"byte_end":493143,"line_start":244,"line_end":244,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":493257,"byte_end":493273,"line_start":250,"line_end":250,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":493511,"byte_end":493527,"line_start":260,"line_end":260,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":493834,"byte_end":493849,"line_start":270,"line_end":270,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":494488,"byte_end":494508,"line_start":289,"line_end":289,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":495315,"byte_end":495331,"line_start":307,"line_end":307,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496163,"byte_end":496178,"line_start":327,"line_end":327,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496576,"byte_end":496590,"line_start":342,"line_end":342,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":497533,"byte_end":497548,"line_start":373,"line_end":373,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":502061,"byte_end":502076,"line_start":522,"line_end":522,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":502298,"byte_end":502312,"line_start":529,"line_end":529,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":502554,"byte_end":502570,"line_start":536,"line_end":536,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":502829,"byte_end":502849,"line_start":543,"line_end":543,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":509271,"byte_end":509282,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":510137,"byte_end":510148,"line_start":75,"line_end":75,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":510264,"byte_end":510275,"line_start":81,"line_end":81,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1248}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":510448,"byte_end":510459,"line_start":87,"line_end":87,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":510771,"byte_end":510782,"line_start":97,"line_end":97,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":511132,"byte_end":511143,"line_start":108,"line_end":108,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":511400,"byte_end":511415,"line_start":121,"line_end":121,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1262}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":511666,"byte_end":511681,"line_start":131,"line_end":131,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":511858,"byte_end":511873,"line_start":137,"line_end":137,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":512259,"byte_end":512274,"line_start":149,"line_end":149,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":512733,"byte_end":512748,"line_start":165,"line_end":165,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":512921,"byte_end":512936,"line_start":174,"line_end":174,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":513213,"byte_end":513228,"line_start":184,"line_end":184,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":513627,"byte_end":513642,"line_start":196,"line_end":196,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":1564,"byte_end":1570,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":16}},{"kind":"Mod","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":1638,"byte_end":1648,"line_start":58,"line_end":58,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":264}},{"kind":"Mod","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":1713,"byte_end":1720,"line_start":61,"line_end":61,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":343}},{"kind":"Mod","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":1774,"byte_end":1783,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":542}},{"kind":"Mod","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":1842,"byte_end":1851,"line_start":67,"line_end":67,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":729}},{"kind":"Mod","span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/lib.rs","byte_start":1897,"byte_end":1903,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":755}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":12527,"byte_end":12533,"line_start":202,"line_end":202,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14341,"byte_end":14347,"line_start":255,"line_end":255,"column_start":16,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14509,"byte_end":14515,"line_start":261,"line_end":261,"column_start":13,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14538,"byte_end":14544,"line_start":262,"line_end":262,"column_start":20,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":2670}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14666,"byte_end":14672,"line_start":268,"line_end":268,"column_start":25,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1288},"to":{"krate":30,"index":57}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":14791,"byte_end":14797,"line_start":274,"line_end":274,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":3319}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":15034,"byte_end":15040,"line_start":283,"line_end":283,"column_start":36,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":15533,"byte_end":15539,"line_start":300,"line_end":300,"column_start":36,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":3117}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":16484,"byte_end":16490,"line_start":326,"line_end":326,"column_start":36,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":3121}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":17837,"byte_end":17843,"line_start":363,"line_end":363,"column_start":18,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":3113}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":17958,"byte_end":17964,"line_start":370,"line_end":370,"column_start":34,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1288},"to":{"krate":30,"index":65}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":19907,"byte_end":19913,"line_start":432,"line_end":432,"column_start":24,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":7596}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20119,"byte_end":20125,"line_start":444,"line_end":444,"column_start":20,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":7592}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20326,"byte_end":20332,"line_start":456,"line_end":456,"column_start":18,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20414,"byte_end":20420,"line_start":462,"line_end":462,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20576,"byte_end":20582,"line_start":470,"line_end":470,"column_start":20,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":20815,"byte_end":20821,"line_start":479,"line_end":479,"column_start":20,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":21054,"byte_end":21060,"line_start":488,"line_end":488,"column_start":20,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":21795,"byte_end":21801,"line_start":518,"line_end":518,"column_start":21,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1288},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22034,"byte_end":22040,"line_start":527,"line_end":527,"column_start":18,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1288},"to":{"krate":28,"index":88}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":22115,"byte_end":22121,"line_start":533,"line_end":533,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/scalar.rs","byte_start":43564,"byte_end":43578,"line_start":1119,"line_end":1119,"column_start":6,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68473,"byte_end":68488,"line_start":73,"line_end":73,"column_start":25,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1337},"to":{"krate":30,"index":57}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68724,"byte_end":68739,"line_start":82,"line_end":82,"column_start":18,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1337},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68843,"byte_end":68858,"line_start":88,"line_end":88,"column_start":20,"column_end":35},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1337},"to":{"krate":1,"index":2670}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":68979,"byte_end":68994,"line_start":94,"line_end":94,"column_start":13,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1337},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69016,"byte_end":69031,"line_start":96,"line_end":96,"column_start":18,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1337},"to":{"krate":28,"index":88}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":69102,"byte_end":69117,"line_start":102,"line_end":102,"column_start":6,"column_end":21},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":71238,"byte_end":71253,"line_start":168,"line_end":168,"column_start":19,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1350},"to":{"krate":0,"index":765}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":71430,"byte_end":71445,"line_start":177,"line_end":177,"column_start":18,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1350},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":71564,"byte_end":71579,"line_start":183,"line_end":183,"column_start":34,"column_end":49},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1350},"to":{"krate":30,"index":65}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":71906,"byte_end":71921,"line_start":196,"line_end":196,"column_start":6,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/montgomery.rs","byte_start":75388,"byte_end":75403,"line_start":298,"line_end":298,"column_start":36,"column_end":51},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1337},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84076,"byte_end":84094,"line_start":156,"line_end":156,"column_start":25,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1382},"to":{"krate":30,"index":57}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84229,"byte_end":84247,"line_start":162,"line_end":162,"column_start":16,"column_end":34},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1382},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":84402,"byte_end":84420,"line_start":168,"line_end":168,"column_start":6,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":89783,"byte_end":89801,"line_start":323,"line_end":323,"column_start":19,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1382},"to":{"krate":0,"index":765}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90081,"byte_end":90099,"line_start":332,"line_end":332,"column_start":18,"column_end":36},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1382},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90196,"byte_end":90214,"line_start":338,"line_end":338,"column_start":6,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90569,"byte_end":90581,"line_start":353,"line_end":353,"column_start":19,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1401},"to":{"krate":0,"index":765}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":90825,"byte_end":90837,"line_start":364,"line_end":364,"column_start":18,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1401},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":91136,"byte_end":91148,"line_start":374,"line_end":374,"column_start":24,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1401},"to":{"krate":0,"index":804}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":91584,"byte_end":91596,"line_start":387,"line_end":387,"column_start":34,"column_end":46},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1401},"to":{"krate":30,"index":65}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":92202,"byte_end":92214,"line_start":402,"line_end":402,"column_start":25,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1401},"to":{"krate":30,"index":57}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":92777,"byte_end":92789,"line_start":415,"line_end":415,"column_start":20,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1401},"to":{"krate":1,"index":2670}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":92907,"byte_end":92919,"line_start":421,"line_end":421,"column_start":13,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1401},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":93103,"byte_end":93115,"line_start":427,"line_end":427,"column_start":6,"column_end":18},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":95590,"byte_end":95602,"line_start":502,"line_end":502,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":96277,"byte_end":96289,"line_start":522,"line_end":522,"column_start":42,"column_end":54},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1401},"to":{"krate":1,"index":3117}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":96820,"byte_end":96832,"line_start":539,"line_end":539,"column_start":42,"column_end":54},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1401},"to":{"krate":1,"index":3121}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":97036,"byte_end":97048,"line_start":547,"line_end":547,"column_start":20,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1401},"to":{"krate":1,"index":7592}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":97674,"byte_end":97686,"line_start":577,"line_end":577,"column_start":14,"column_end":26},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1401},"to":{"krate":1,"index":3113}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":97994,"byte_end":98006,"line_start":589,"line_end":589,"column_start":36,"column_end":48},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1401},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":102711,"byte_end":102723,"line_start":735,"line_end":735,"column_start":6,"column_end":18},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":103406,"byte_end":103427,"line_start":755,"line_end":755,"column_start":6,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":105961,"byte_end":105982,"line_start":824,"line_end":824,"column_start":6,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":106752,"byte_end":106764,"line_start":846,"line_end":846,"column_start":6,"column_end":18},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":109293,"byte_end":109305,"line_start":926,"line_end":926,"column_start":16,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1401},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/edwards.rs","byte_start":109545,"byte_end":109566,"line_start":933,"line_end":933,"column_start":16,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1459},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136170,"byte_end":136189,"line_start":214,"line_end":214,"column_start":25,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1465},"to":{"krate":30,"index":57}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":136315,"byte_end":136334,"line_start":220,"line_end":220,"column_start":6,"column_end":25},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":139274,"byte_end":139293,"line_start":307,"line_end":307,"column_start":19,"column_end":38},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1465},"to":{"krate":0,"index":765}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":139404,"byte_end":139423,"line_start":313,"line_end":313,"column_start":18,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1465},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":143861,"byte_end":143875,"line_start":440,"line_end":440,"column_start":6,"column_end":20},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":154647,"byte_end":154661,"line_start":740,"line_end":740,"column_start":19,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1484},"to":{"krate":0,"index":765}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":154777,"byte_end":154791,"line_start":746,"line_end":746,"column_start":18,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":155059,"byte_end":155073,"line_start":756,"line_end":756,"column_start":20,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":2670}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":155205,"byte_end":155219,"line_start":762,"line_end":762,"column_start":25,"column_end":39},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1484},"to":{"krate":30,"index":57}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":155700,"byte_end":155714,"line_start":779,"line_end":779,"column_start":13,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":156234,"byte_end":156248,"line_start":795,"line_end":795,"column_start":44,"column_end":58},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":3117}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":156786,"byte_end":156800,"line_start":813,"line_end":813,"column_start":44,"column_end":58},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":3121}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":157009,"byte_end":157023,"line_start":821,"line_end":821,"column_start":20,"column_end":34},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":7592}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":157392,"byte_end":157406,"line_start":841,"line_end":841,"column_start":14,"column_end":28},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":3113}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":157540,"byte_end":157554,"line_start":849,"line_end":849,"column_start":36,"column_end":50},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":161188,"byte_end":161202,"line_start":965,"line_end":965,"column_start":6,"column_end":20},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":162511,"byte_end":162534,"line_start":1010,"line_end":1010,"column_start":6,"column_end":29},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":163159,"byte_end":163173,"line_start":1026,"line_end":1026,"column_start":34,"column_end":48},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1484},"to":{"krate":30,"index":65}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":164400,"byte_end":164419,"line_start":1067,"line_end":1067,"column_start":16,"column_end":35},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1465},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/ristretto.rs","byte_start":164585,"byte_end":164599,"line_start":1073,"line_end":1073,"column_start":16,"column_end":30},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":188268,"byte_end":188269,"line_start":41,"line_end":41,"column_start":24,"column_end":25},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":770},"to":{"krate":0,"index":767}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/traits.rs","byte_start":195987,"byte_end":195992,"line_start":255,"line_end":255,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":3024},"to":{"krate":0,"index":786}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202079,"byte_end":202091,"line_start":55,"line_end":55,"column_start":13,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":833},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202115,"byte_end":202127,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":833},"to":{"krate":1,"index":2670}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202257,"byte_end":202269,"line_start":63,"line_end":63,"column_start":25,"column_end":37},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":833},"to":{"krate":30,"index":57}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/field.rs","byte_start":202577,"byte_end":202589,"line_start":72,"line_end":72,"column_start":6,"column_end":18},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":222965,"byte_end":222981,"line_start":54,"line_end":54,"column_start":16,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1545},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":223142,"byte_end":223158,"line_start":60,"line_end":60,"column_start":18,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1545},"to":{"krate":28,"index":88}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":223269,"byte_end":223285,"line_start":66,"line_end":66,"column_start":46,"column_end":62},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1545},"to":{"krate":1,"index":3117}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":223721,"byte_end":223737,"line_start":83,"line_end":83,"column_start":46,"column_end":62},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1545},"to":{"krate":1,"index":3121}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":224910,"byte_end":224926,"line_start":113,"line_end":113,"column_start":46,"column_end":62},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1545},"to":{"krate":1,"index":3125}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":231797,"byte_end":231813,"line_start":230,"line_end":230,"column_start":34,"column_end":50},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1545},"to":{"krate":30,"index":65}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/field.rs","byte_start":234066,"byte_end":234082,"line_start":277,"line_end":277,"column_start":6,"column_end":22},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246019,"byte_end":246027,"line_start":24,"line_end":24,"column_start":16,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1553},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246180,"byte_end":246188,"line_start":30,"line_end":30,"column_start":18,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1553},"to":{"krate":28,"index":88}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246276,"byte_end":246284,"line_start":36,"line_end":36,"column_start":23,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1553},"to":{"krate":1,"index":3319}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246415,"byte_end":246423,"line_start":43,"line_end":43,"column_start":26,"column_end":34},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1553},"to":{"krate":1,"index":3323}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/u32/scalar.rs","byte_start":246642,"byte_end":246650,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":491560,"byte_end":491576,"line_start":187,"line_end":187,"column_start":18,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1576},"to":{"krate":28,"index":88}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492193,"byte_end":492213,"line_start":208,"line_end":208,"column_start":18,"column_end":38},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1590},"to":{"krate":28,"index":88}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492584,"byte_end":492599,"line_start":223,"line_end":223,"column_start":19,"column_end":34},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1561},"to":{"krate":0,"index":765}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":492813,"byte_end":492833,"line_start":233,"line_end":233,"column_start":19,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1590},"to":{"krate":0,"index":765}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":493123,"byte_end":493143,"line_start":244,"line_end":244,"column_start":18,"column_end":38},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1590},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":493257,"byte_end":493273,"line_start":250,"line_end":250,"column_start":19,"column_end":35},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1576},"to":{"krate":0,"index":765}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":493511,"byte_end":493527,"line_start":260,"line_end":260,"column_start":18,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1576},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":493834,"byte_end":493849,"line_start":270,"line_end":270,"column_start":24,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1561},"to":{"krate":0,"index":804}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":494488,"byte_end":494508,"line_start":289,"line_end":289,"column_start":34,"column_end":54},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1590},"to":{"krate":30,"index":65}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":495315,"byte_end":495331,"line_start":307,"line_end":307,"column_start":34,"column_end":50},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1576},"to":{"krate":30,"index":65}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496163,"byte_end":496178,"line_start":327,"line_end":327,"column_start":6,"column_end":21},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":496576,"byte_end":496590,"line_start":342,"line_end":342,"column_start":6,"column_end":20},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":497533,"byte_end":497548,"line_start":373,"line_end":373,"column_start":6,"column_end":21},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":502061,"byte_end":502076,"line_start":522,"line_end":522,"column_start":16,"column_end":31},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1561},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":502298,"byte_end":502312,"line_start":529,"line_end":529,"column_start":16,"column_end":30},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1568},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":502554,"byte_end":502570,"line_start":536,"line_end":536,"column_start":16,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1576},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/backend/serial/curve_models/mod.rs","byte_start":502829,"byte_end":502849,"line_start":543,"line_end":543,"column_start":16,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1590},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":509271,"byte_end":509282,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":510137,"byte_end":510148,"line_start":75,"line_end":75,"column_start":37,"column_end":48},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":2997}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":510264,"byte_end":510275,"line_start":81,"line_end":81,"column_start":26,"column_end":37},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":510448,"byte_end":510459,"line_start":87,"line_end":87,"column_start":37,"column_end":48},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":510771,"byte_end":510782,"line_start":97,"line_end":97,"column_start":37,"column_end":48},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1598},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":511132,"byte_end":511143,"line_start":108,"line_end":108,"column_start":21,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1598},"to":{"krate":28,"index":88}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":511400,"byte_end":511415,"line_start":121,"line_end":121,"column_start":15,"column_end":30},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":511666,"byte_end":511681,"line_start":131,"line_end":131,"column_start":26,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1608},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":511858,"byte_end":511873,"line_start":137,"line_end":137,"column_start":37,"column_end":52},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1608},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":512259,"byte_end":512274,"line_start":149,"line_end":149,"column_start":37,"column_end":52},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1608},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":512733,"byte_end":512748,"line_start":165,"line_end":165,"column_start":15,"column_end":30},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1618},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":512921,"byte_end":512936,"line_start":174,"line_end":174,"column_start":26,"column_end":41},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1618},"to":{"krate":1,"index":9553}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":513213,"byte_end":513228,"line_start":184,"line_end":184,"column_start":37,"column_end":52},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1618},"to":{"krate":1,"index":2925}},{"span":{"file_name":"/home/ask/.cargo/registry/src/github.com-1ecc6299db9ec823/curve25519-dalek-ng-4.1.1/src/window.rs","byte_start":513627,"byte_end":513642,"line_start":196,"line_end":196,"column_start":37,"column_end":52},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1618},"to":{"krate":1,"index":2925}}]}